name: build

on: [push, pull_request, workflow_dispatch]

env:
  RUST_VERSION: "1.90.0"

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v5

    - uses: lukka/get-cmake@latest
      with:
        cmakeVersion: "3.21.2"

    - name: Install rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: rustfmt, clippy
    
    - name: Run cargo check
      run: cargo check

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    
    - name: Run cargo clippy
      run: cargo clippy -- -D warnings

    - name: run cmake
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=Debug -B build
    - name: run build
      run: cmake --build build --config Debug

    # mysql bin has conflicting dlls with fabric than prevents fabric from starting
    - name: Remove conflict dll paths
      shell: powershell
      run: |
        get-command libprotobuf.dll | format-list
        Remove-Item -Recurse -Force "C:\Program Files\MySQL\MySQL Server 8.0\bin"

    - name: check sf exist
      run: Powershell.exe -File .\scripts\check_sf_installed.ps1

    # Creates a 5 node dev cluster
    - name: start sf cluster
      run: Powershell.exe -File "C:\Program Files\Microsoft SDKs\Service Fabric\ClusterSetup\DevClusterSetup.ps1"

    - name: start connection
      run: Powershell.exe -File .\scripts\check_cluster_online.ps1

    - name: provision apps and run tests
      shell: powershell
      run: |
        # The test will add and remove app
        .\tests\echo_script_test.ps1
        .\scripts\echomain_stateful_ctl2.ps1 -Action Add
        .\scripts\echomain_ctl.ps1 -Action Add

    - name: Run cargo test
      run: cargo test --all -- --nocapture

  # Do not run test because SF onebox is not supported on azl3 yet.
  build-azl3:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azurelinux/base/core:3.0
      options: --privileged
    steps:
      - name: tdnf install
        run: |
          tdnf update --noplugins --skipsignature -y
          tdnf install --noplugins --skipsignature -y tar unzip ca-certificates gcc glibc-devel binutils make

      - uses: actions/checkout@v5

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "3.21.2"

      - name: Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
      
      - name: Run cargo check
        run: cargo check

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: run cmake
        run: > 
          cmake . -DCMAKE_BUILD_TYPE=Debug -B build
      - name: run build
        run: cmake --build build --config Debug

  build-devcontainer:
    strategy:
      fail-fast: false
      matrix:
        devcontainer-type: ["u22", "azl3"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run in Dev Container
        uses: devcontainers/ci@v0.3
        with:
          configFile: .devcontainer/${{ matrix.devcontainer-type }}/devcontainer.json
          runCmd: |
            cmake . -DCMAKE_BUILD_TYPE=Debug -B build
            cmake --build build --config Debug
            echo "Preparing test apps"
            bash ./scripts/prepare_test_apps.sh
            echo "Running tests"
            cargo test --all -- --nocapture
