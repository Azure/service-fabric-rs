name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug"]
        os: [ windows-latest ]
    steps:
    - uses: actions/checkout@v4

    - name: Get MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Get specific version CMake, v3.21.2
      uses: lukka/get-cmake@v3.21.2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: run cmake
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -B build
    - name: run build
      run: cmake --build build --config ${{ matrix.BUILD_TYPE }}

    # mysql bin has conflicting dlls with fabric than prevents fabric from starting
    - name: Remove conflict dll paths
      shell: powershell
      run: |
        get-command libprotobuf.dll | format-list
        Remove-Item -Recurse -Force "C:\Program Files\MySQL\MySQL Server 8.0\bin"

    - name: check sf exist
      run: Powershell.exe -File .\build\_deps\service_fabric_cpp-src\scripts\check_sf_installed.ps1

    - name: start sf cluster
      run: Powershell.exe -File "C:\Program Files\Microsoft SDKs\Service Fabric\ClusterSetup\DevClusterSetup.ps1" -CreateOneNodeCluster

    - name: start connection
      run: Powershell.exe -File .\build\_deps\service_fabric_cpp-src\scripts\check_cluster_online.ps1

    - name: run echo example app
      run: Powershell.exe -File .\tests\echo_script_test.ps1

  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug"]
        os: [ ubuntu-20.04 ]
    steps:
    - uses: actions/checkout@v4
    - name: apt-get
      run: sudo apt-get update && sudo apt-get install apt-transport-https curl lsb-release wget gnupg2 software-properties-common debconf-utils clang lld -y

    - name: install sf
      run: |
        wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb;
        sudo dpkg -i packages-microsoft-prod.deb;
        curl -fsSL https://packages.microsoft.com/keys/msopentech.asc | sudo apt-key add - ;
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - ;
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" ;
        sudo apt-get update;
        echo "servicefabric servicefabric/accepted-eula-ga select true" | sudo debconf-set-selections ;
        echo "servicefabricsdkcommon servicefabricsdkcommon/accepted-eula-ga select true" | sudo debconf-set-selections ;
        sudo apt-get install servicefabricsdkcommon -y

    - name: Get specific version CMake, v3.21.2
      uses: lukka/get-cmake@v3.21.2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    
    - name: run cmake
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -B build
    - name: run build
      run: cmake --build build --config ${{ matrix.BUILD_TYPE }}


    # - uses: actions/checkout@v2

    # - name: apt-get
    #   run: sudo apt-get install apt-transport-https curl lsb-release wget gnupg2 software-properties-common debconf-utils -y

    # - name: Install rust stable
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     toolchain: stable