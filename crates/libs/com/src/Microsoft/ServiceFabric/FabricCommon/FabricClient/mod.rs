#[inline]
pub unsafe fn FabricCreateClient(
    connectionstrings: &[::windows_core::PCWSTR],
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void> {
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateClient(
            connectionstringssize: u16,
            connectionstrings: *const ::windows_core::PCWSTR,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateClient(
        connectionstrings.len().try_into().unwrap(),
        ::core::mem::transmute(connectionstrings.as_ptr()),
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateClient2<P0>(
    connectionstrings: &[::windows_core::PCWSTR],
    __midl__fabricclientmodule0000: P0,
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void>
where
    P0: ::windows_core::IntoParam<IFabricServiceNotificationEventHandler>,
{
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateClient2(
            connectionstringssize: u16,
            connectionstrings: *const ::windows_core::PCWSTR,
            __midl__fabricclientmodule0000: *mut ::core::ffi::c_void,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateClient2(
        connectionstrings.len().try_into().unwrap(),
        ::core::mem::transmute(connectionstrings.as_ptr()),
        __midl__fabricclientmodule0000.into_param().abi(),
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateClient3<P0, P1>(
    connectionstrings: &[::windows_core::PCWSTR],
    __midl__fabricclientmodule0002: P0,
    __midl__fabricclientmodule0003: P1,
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void>
where
    P0: ::windows_core::IntoParam<IFabricServiceNotificationEventHandler>,
    P1: ::windows_core::IntoParam<IFabricClientConnectionEventHandler>,
{
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateClient3(
            connectionstringssize: u16,
            connectionstrings: *const ::windows_core::PCWSTR,
            __midl__fabricclientmodule0002: *mut ::core::ffi::c_void,
            __midl__fabricclientmodule0003: *mut ::core::ffi::c_void,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateClient3(
        connectionstrings.len().try_into().unwrap(),
        ::core::mem::transmute(connectionstrings.as_ptr()),
        __midl__fabricclientmodule0002.into_param().abi(),
        __midl__fabricclientmodule0003.into_param().abi(),
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateLocalClient(
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void> {
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateLocalClient(
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateLocalClient(iid, &mut result__).map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateLocalClient2<P0>(
    __midl__fabricclientmodule0001: P0,
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void>
where
    P0: ::windows_core::IntoParam<IFabricServiceNotificationEventHandler>,
{
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateLocalClient2(
            __midl__fabricclientmodule0001: *mut ::core::ffi::c_void,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateLocalClient2(
        __midl__fabricclientmodule0001.into_param().abi(),
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateLocalClient3<P0, P1>(
    __midl__fabricclientmodule0004: P0,
    __midl__fabricclientmodule0005: P1,
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void>
where
    P0: ::windows_core::IntoParam<IFabricServiceNotificationEventHandler>,
    P1: ::windows_core::IntoParam<IFabricClientConnectionEventHandler>,
{
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateLocalClient3(
            __midl__fabricclientmodule0004: *mut ::core::ffi::c_void,
            __midl__fabricclientmodule0005: *mut ::core::ffi::c_void,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateLocalClient3(
        __midl__fabricclientmodule0004.into_param().abi(),
        __midl__fabricclientmodule0005.into_param().abi(),
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricCreateLocalClient4<P0, P1>(
    __midl__fabricclientmodule0006: P0,
    __midl__fabricclientmodule0007: P1,
    clientrole: super::super::FABRIC_CLIENT_ROLE,
    iid: *const ::windows_core::GUID,
) -> ::windows_core::Result<*mut ::core::ffi::c_void>
where
    P0: ::windows_core::IntoParam<IFabricServiceNotificationEventHandler>,
    P1: ::windows_core::IntoParam<IFabricClientConnectionEventHandler>,
{
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricCreateLocalClient4(
            __midl__fabricclientmodule0006: *mut ::core::ffi::c_void,
            __midl__fabricclientmodule0007: *mut ::core::ffi::c_void,
            clientrole: super::super::FABRIC_CLIENT_ROLE,
            iid: *const ::windows_core::GUID,
            fabricclient: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricCreateLocalClient4(
        __midl__fabricclientmodule0006.into_param().abi(),
        __midl__fabricclientmodule0007.into_param().abi(),
        clientrole,
        iid,
        &mut result__,
    )
    .map(|| result__)
}
#[inline]
pub unsafe fn FabricGetDefaultRollingUpgradeMonitoringPolicy(
) -> ::windows_core::Result<IFabricGetRollingUpgradeMonitoringPolicyResult> {
    #[link(name = "FabricClient")]
    extern "system" {
        pub fn FabricGetDefaultRollingUpgradeMonitoringPolicy(
            result: *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT;
    }
    let mut result__ = ::std::mem::zeroed();
    FabricGetDefaultRollingUpgradeMonitoringPolicy(&mut result__)
        .and_then(|| ::windows_core::Type::from_abi(result__))
}
::windows_core::imp::com_interface!(
    IFabricApplicationHealthResult,
    IFabricApplicationHealthResult_Vtbl,
    0x41612fab_e615_4a48_98e7_4abcc93b6049
);
::windows_core::imp::interface_hierarchy!(IFabricApplicationHealthResult, ::windows_core::IUnknown);
impl IFabricApplicationHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ApplicationHealth(&self) -> *mut super::super::FABRIC_APPLICATION_HEALTH {
        (::windows_core::Interface::vtable(self).get_ApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationHealthResult {}
unsafe impl ::core::marker::Sync for IFabricApplicationHealthResult {}
#[repr(C)]
pub struct IFabricApplicationHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ApplicationHealth:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_APPLICATION_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ApplicationHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient_Vtbl,
    0x7c219ae9_e58d_431f_8b30_92a40281faac
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient,
    ::windows_core::IUnknown
);
impl IFabricApplicationManagementClient {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient {}
#[repr(C)]
pub struct IFabricApplicationManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginProvisionApplicationType: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndProvisionApplicationType: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginCreateApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginUpgradeApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpgradeApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetApplicationUpgradeProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetApplicationUpgradeProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMoveNextApplicationUpgradeDomain: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndMoveNextApplicationUpgradeDomain: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub BeginDeleteApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginUnprovisionApplicationType: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUnprovisionApplicationType: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient10,
    IFabricApplicationManagementClient10_Vtbl,
    0x67001225_d106_41ae_8bd4_5a0a119c5c01
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient10,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient5,
    IFabricApplicationManagementClient6,
    IFabricApplicationManagementClient7,
    IFabricApplicationManagementClient8,
    IFabricApplicationManagementClient9
);
impl IFabricApplicationManagementClient10 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateApplication<P0>(
        &self,
        applicationupdatedescription: *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteApplication2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginProvisionApplicationType2<P0>(
        &self,
        description: *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUnprovisionApplicationType2<P0>(
        &self,
        description: *const super::super::FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUnprovisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUnprovisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionApplicationType3<P0>(
        &self,
        description: *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_BASE,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginProvisionApplicationType3)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType3<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndProvisionApplicationType3)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient10 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient10 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient10_Vtbl {
    pub base__: IFabricApplicationManagementClient9_Vtbl,
    pub BeginProvisionApplicationType3: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_BASE,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndProvisionApplicationType3: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient2_Vtbl,
    0xf873516f_9bfe_47e5_93b9_3667aaf19324
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient2,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient
);
impl IFabricApplicationManagementClient2 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient2 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient2_Vtbl {
    pub base__: IFabricApplicationManagementClient_Vtbl,
    pub BeginGetApplicationManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMoveNextApplicationUpgradeDomain2:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const u16,
            ::windows_core::PCWSTR,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndMoveNextApplicationUpgradeDomain2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient3_Vtbl,
    0x108c7735_97e1_4af8_8c2d_9080b1b29d33
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient3,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2
);
impl IFabricApplicationManagementClient3 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self).CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self).RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient3 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient3 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient3_Vtbl {
    pub base__: IFabricApplicationManagementClient2_Vtbl,
    pub BeginUpdateApplicationUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpdateApplicationUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRestartDeployedCodePackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRestartDeployedCodePackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub CopyApplicationPackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
    ) -> ::windows_core::HRESULT,
    pub RemoveApplicationPackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient4_Vtbl,
    0x82c41b22_dbcb_4f7a_8d2f_f9bb94add446
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient4,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3
);
impl IFabricApplicationManagementClient4 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient4 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient4 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient4_Vtbl {
    pub base__: IFabricApplicationManagementClient3_Vtbl,
    pub BeginDeployServicePackageToNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeployServicePackageToNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient5,
    IFabricApplicationManagementClient5_Vtbl,
    0xd7490e43_2217_4158_93e1_9ce4dd6f724a
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient5,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4
);
impl IFabricApplicationManagementClient5 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient5 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient5 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient5_Vtbl {
    pub base__: IFabricApplicationManagementClient4_Vtbl,
    pub BeginRollbackApplicationUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRollbackApplicationUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient6,
    IFabricApplicationManagementClient6_Vtbl,
    0xb01e63ee_1ea4_4181_95c7_983b32e16848
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient6,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient5
);
impl IFabricApplicationManagementClient6 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateApplication<P0>(
        &self,
        applicationupdatedescription: *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient6 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient6 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient6_Vtbl {
    pub base__: IFabricApplicationManagementClient5_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginUpdateApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginUpdateApplication: usize,
    pub EndUpdateApplication: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient7,
    IFabricApplicationManagementClient7_Vtbl,
    0x26844276_25b1_4f8c_adbe_b1b3a3083c17
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient7,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient5,
    IFabricApplicationManagementClient6
);
impl IFabricApplicationManagementClient7 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateApplication<P0>(
        &self,
        applicationupdatedescription: *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteApplication2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient7 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient7 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient7_Vtbl {
    pub base__: IFabricApplicationManagementClient6_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginDeleteApplication2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DELETE_APPLICATION_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginDeleteApplication2: usize,
    pub EndDeleteApplication2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient8,
    IFabricApplicationManagementClient8_Vtbl,
    0x97b38e85_7329_47ff_a8d2_b7cbf1603689
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient8,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient5,
    IFabricApplicationManagementClient6,
    IFabricApplicationManagementClient7
);
impl IFabricApplicationManagementClient8 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateApplication<P0>(
        &self,
        applicationupdatedescription: *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteApplication2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginProvisionApplicationType2<P0>(
        &self,
        description: *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient8 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient8 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient8_Vtbl {
    pub base__: IFabricApplicationManagementClient7_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginProvisionApplicationType2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginProvisionApplicationType2: usize,
    pub EndProvisionApplicationType2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationManagementClient9,
    IFabricApplicationManagementClient9_Vtbl,
    0x26617b63_1350_4d7f_830c_2200978d31bb
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationManagementClient9,
    ::windows_core::IUnknown,
    IFabricApplicationManagementClient,
    IFabricApplicationManagementClient2,
    IFabricApplicationManagementClient3,
    IFabricApplicationManagementClient4,
    IFabricApplicationManagementClient5,
    IFabricApplicationManagementClient6,
    IFabricApplicationManagementClient7,
    IFabricApplicationManagementClient8
);
impl IFabricApplicationManagementClient9 {
    pub unsafe fn BeginProvisionApplicationType<P0, P1>(
        &self,
        applicationbuildpath: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationbuildpath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateApplication<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeApplication<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_APPLICATION_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationUpgradeProgress<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteApplication<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionApplicationType<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionApplicationType)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetApplicationManifest<P0, P1, P2>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextApplicationUpgradeDomain2<P0, P1>(
        &self,
        applicationname: *const u16,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextApplicationUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextApplicationUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateApplicationUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplicationUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        restartcodepackagedescription : *const super::super:: FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            restartcodepackagedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyApplicationPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepath: P1,
        applicationpackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepath.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveApplicationPackage<P0, P1>(
        &self,
        imagestoreconnectionstring: P0,
        applicationpackagepathinimagestore: P1,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveApplicationPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            applicationpackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeployServicePackageToNode<P0, P1, P2, P3, P4>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        sharingpolicy: *const super::super::FABRIC_PACKAGE_SHARING_POLICY_LIST,
        nodename: P3,
        timeoutmilliseconds: u32,
        callback: P4,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            sharingpolicy,
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeployServicePackageToNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeployServicePackageToNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackApplicationUpgrade<P0>(
        &self,
        applicationname: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackApplicationUpgrade<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRollbackApplicationUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateApplication<P0>(
        &self,
        applicationupdatedescription: *const super::super::FABRIC_APPLICATION_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            applicationupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateApplication<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpdateApplication)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteApplication2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_APPLICATION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteApplication2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeleteApplication2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginProvisionApplicationType2<P0>(
        &self,
        description: *const super::super::FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionApplicationType2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndProvisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUnprovisionApplicationType2<P0>(
        &self,
        description: *const super::super::FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUnprovisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionApplicationType2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUnprovisionApplicationType2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationManagementClient9 {}
unsafe impl ::core::marker::Sync for IFabricApplicationManagementClient9 {}
#[repr(C)]
pub struct IFabricApplicationManagementClient9_Vtbl {
    pub base__: IFabricApplicationManagementClient8_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginUnprovisionApplicationType2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginUnprovisionApplicationType2: usize,
    pub EndUnprovisionApplicationType2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationUpgradeProgressResult,
    IFabricApplicationUpgradeProgressResult_Vtbl,
    0x1e4670f8_ede5_48ab_881f_c45a0f38413a
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationUpgradeProgressResult,
    ::windows_core::IUnknown
);
impl IFabricApplicationUpgradeProgressResult {
    pub unsafe fn get_ApplicationName(&self) -> *mut u16 {
        (::windows_core::Interface::vtable(self).get_ApplicationName)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_ApplicationTypeName(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_ApplicationTypeName)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_TargetApplicationTypeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_TargetApplicationTypeVersion)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_APPLICATION_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self).get_UpgradeState)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationUpgradeProgressResult {}
unsafe impl ::core::marker::Sync for IFabricApplicationUpgradeProgressResult {}
#[repr(C)]
pub struct IFabricApplicationUpgradeProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationName: unsafe extern "system" fn(*mut ::core::ffi::c_void) -> *mut u16,
    pub get_ApplicationTypeName:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
    pub get_TargetApplicationTypeVersion:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
    pub get_UpgradeState:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> super::super::FABRIC_APPLICATION_UPGRADE_STATE,
    pub GetUpgradeDomains: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION,
    ) -> ::windows_core::HRESULT,
    pub GetChangedUpgradeDomains: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricApplicationUpgradeProgressResult2,
    IFabricApplicationUpgradeProgressResult2_Vtbl,
    0x62707ee5_b625_4489_aa4d_2e54b06ea248
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationUpgradeProgressResult2,
    ::windows_core::IUnknown,
    IFabricApplicationUpgradeProgressResult
);
impl IFabricApplicationUpgradeProgressResult2 {
    pub unsafe fn get_ApplicationName(&self) -> *mut u16 {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_ApplicationName)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_ApplicationTypeName(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_ApplicationTypeName)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_TargetApplicationTypeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_TargetApplicationTypeVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_APPLICATION_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_UpgradeState)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn get_RollingUpgradeMode(&self) -> super::super::FABRIC_ROLLING_UPGRADE_MODE {
        (::windows_core::Interface::vtable(self).get_RollingUpgradeMode)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_NextUpgradeDomain(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_NextUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationUpgradeProgressResult2 {}
unsafe impl ::core::marker::Sync for IFabricApplicationUpgradeProgressResult2 {}
#[repr(C)]
pub struct IFabricApplicationUpgradeProgressResult2_Vtbl {
    pub base__: IFabricApplicationUpgradeProgressResult_Vtbl,
    pub get_RollingUpgradeMode:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> super::super::FABRIC_ROLLING_UPGRADE_MODE,
    pub get_NextUpgradeDomain:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
}
::windows_core::imp::com_interface!(
    IFabricApplicationUpgradeProgressResult3,
    IFabricApplicationUpgradeProgressResult3_Vtbl,
    0x1bc1d9c3_eef5_41fe_b8a2_abb97a8ba8e2
);
::windows_core::imp::interface_hierarchy!(
    IFabricApplicationUpgradeProgressResult3,
    ::windows_core::IUnknown,
    IFabricApplicationUpgradeProgressResult,
    IFabricApplicationUpgradeProgressResult2
);
impl IFabricApplicationUpgradeProgressResult3 {
    pub unsafe fn get_ApplicationName(&self) -> *mut u16 {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_ApplicationName)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_ApplicationTypeName(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_ApplicationTypeName)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_TargetApplicationTypeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_TargetApplicationTypeVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_APPLICATION_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_UpgradeState)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricApplicationUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn get_RollingUpgradeMode(&self) -> super::super::FABRIC_ROLLING_UPGRADE_MODE {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_RollingUpgradeMode)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_NextUpgradeDomain(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_NextUpgradeDomain)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeProgress(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_UPGRADE_PROGRESS {
        (::windows_core::Interface::vtable(self).get_UpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricApplicationUpgradeProgressResult3 {}
unsafe impl ::core::marker::Sync for IFabricApplicationUpgradeProgressResult3 {}
#[repr(C)]
pub struct IFabricApplicationUpgradeProgressResult3_Vtbl {
    pub base__: IFabricApplicationUpgradeProgressResult2_Vtbl,
    pub get_UpgradeProgress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_UPGRADE_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricChaosDescriptionResult,
    IFabricChaosDescriptionResult_Vtbl,
    0xfa8aa86e_f0fa_4a14_bed7_1dcfa0980b5b
);
::windows_core::imp::interface_hierarchy!(IFabricChaosDescriptionResult, ::windows_core::IUnknown);
impl IFabricChaosDescriptionResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ChaosDescriptionResult(&self) -> *mut super::super::FABRIC_CHAOS_DESCRIPTION {
        (::windows_core::Interface::vtable(self).get_ChaosDescriptionResult)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricChaosDescriptionResult {}
unsafe impl ::core::marker::Sync for IFabricChaosDescriptionResult {}
#[repr(C)]
pub struct IFabricChaosDescriptionResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ChaosDescriptionResult:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_CHAOS_DESCRIPTION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ChaosDescriptionResult: usize,
}
::windows_core::imp::com_interface!(
    IFabricChaosEventsSegmentResult,
    IFabricChaosEventsSegmentResult_Vtbl,
    0xde148299_c48a_4540_877b_5b1daa518d76
);
::windows_core::imp::interface_hierarchy!(
    IFabricChaosEventsSegmentResult,
    ::windows_core::IUnknown
);
impl IFabricChaosEventsSegmentResult {
    pub unsafe fn get_ChaosEventsSegmentResult(
        &self,
    ) -> *mut super::super::FABRIC_CHAOS_EVENTS_SEGMENT {
        (::windows_core::Interface::vtable(self).get_ChaosEventsSegmentResult)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricChaosEventsSegmentResult {}
unsafe impl ::core::marker::Sync for IFabricChaosEventsSegmentResult {}
#[repr(C)]
pub struct IFabricChaosEventsSegmentResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ChaosEventsSegmentResult:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_CHAOS_EVENTS_SEGMENT,
}
::windows_core::imp::com_interface!(
    IFabricChaosReportResult,
    IFabricChaosReportResult_Vtbl,
    0x8952e931_b2b3_470a_b982_6b415f30dbc0
);
::windows_core::imp::interface_hierarchy!(IFabricChaosReportResult, ::windows_core::IUnknown);
impl IFabricChaosReportResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ChaosReportResult(&self) -> *mut super::super::FABRIC_CHAOS_REPORT {
        (::windows_core::Interface::vtable(self).get_ChaosReportResult)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricChaosReportResult {}
unsafe impl ::core::marker::Sync for IFabricChaosReportResult {}
#[repr(C)]
pub struct IFabricChaosReportResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ChaosReportResult: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_CHAOS_REPORT,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ChaosReportResult: usize,
}
::windows_core::imp::com_interface!(
    IFabricChaosScheduleDescriptionResult,
    IFabricChaosScheduleDescriptionResult_Vtbl,
    0x3b93f0d9_c0a9_4df5_9b09_b2365de89d84
);
::windows_core::imp::interface_hierarchy!(
    IFabricChaosScheduleDescriptionResult,
    ::windows_core::IUnknown
);
impl IFabricChaosScheduleDescriptionResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ChaosScheduleDescriptionResult(
        &self,
    ) -> *mut super::super::FABRIC_CHAOS_SCHEDULE_DESCRIPTION {
        (::windows_core::Interface::vtable(self).get_ChaosScheduleDescriptionResult)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricChaosScheduleDescriptionResult {}
unsafe impl ::core::marker::Sync for IFabricChaosScheduleDescriptionResult {}
#[repr(C)]
pub struct IFabricChaosScheduleDescriptionResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ChaosScheduleDescriptionResult:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_CHAOS_SCHEDULE_DESCRIPTION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ChaosScheduleDescriptionResult: usize,
}
::windows_core::imp::com_interface!(
    IFabricClientConnectionEventHandler,
    IFabricClientConnectionEventHandler_Vtbl,
    0x2bd21f94_d962_4bb4_84b8_5a4b3e9d4d4d
);
::windows_core::imp::interface_hierarchy!(
    IFabricClientConnectionEventHandler,
    ::windows_core::IUnknown
);
impl IFabricClientConnectionEventHandler {
    pub unsafe fn OnConnected<P0>(
        &self,
        __midl__ifabricclientconnectioneventhandler0000: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<IFabricGatewayInformationResult>,
    {
        (::windows_core::Interface::vtable(self).OnConnected)(
            ::windows_core::Interface::as_raw(self),
            __midl__ifabricclientconnectioneventhandler0000
                .into_param()
                .abi(),
        )
        .ok()
    }
    pub unsafe fn OnDisconnected<P0>(
        &self,
        __midl__ifabricclientconnectioneventhandler0001: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<IFabricGatewayInformationResult>,
    {
        (::windows_core::Interface::vtable(self).OnDisconnected)(
            ::windows_core::Interface::as_raw(self),
            __midl__ifabricclientconnectioneventhandler0001
                .into_param()
                .abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClientConnectionEventHandler {}
unsafe impl ::core::marker::Sync for IFabricClientConnectionEventHandler {}
#[repr(C)]
pub struct IFabricClientConnectionEventHandler_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub OnConnected: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub OnDisconnected: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClientConnectionEventHandler2,
    IFabricClientConnectionEventHandler2_Vtbl,
    0x6b5dbd26_7d7a_4a3f_b8ea_1f049105e897
);
::windows_core::imp::interface_hierarchy!(
    IFabricClientConnectionEventHandler2,
    ::windows_core::IUnknown,
    IFabricClientConnectionEventHandler
);
impl IFabricClientConnectionEventHandler2 {
    pub unsafe fn OnConnected<P0>(
        &self,
        __midl__ifabricclientconnectioneventhandler0000: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<IFabricGatewayInformationResult>,
    {
        (::windows_core::Interface::vtable(self).base__.OnConnected)(
            ::windows_core::Interface::as_raw(self),
            __midl__ifabricclientconnectioneventhandler0000
                .into_param()
                .abi(),
        )
        .ok()
    }
    pub unsafe fn OnDisconnected<P0>(
        &self,
        __midl__ifabricclientconnectioneventhandler0001: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<IFabricGatewayInformationResult>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .OnDisconnected)(
            ::windows_core::Interface::as_raw(self),
            __midl__ifabricclientconnectioneventhandler0001
                .into_param()
                .abi(),
        )
        .ok()
    }
    pub unsafe fn OnClaimsRetrieval(
        &self,
        metadata: *const super::super::FABRIC_CLAIMS_RETRIEVAL_METADATA,
    ) -> ::windows_core::Result<super::IFabricStringResult> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).OnClaimsRetrieval)(
            ::windows_core::Interface::as_raw(self),
            metadata,
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricClientConnectionEventHandler2 {}
unsafe impl ::core::marker::Sync for IFabricClientConnectionEventHandler2 {}
#[repr(C)]
pub struct IFabricClientConnectionEventHandler2_Vtbl {
    pub base__: IFabricClientConnectionEventHandler_Vtbl,
    pub OnClaimsRetrieval: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLAIMS_RETRIEVAL_METADATA,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClientSettings,
    IFabricClientSettings_Vtbl,
    0xb0e7dee0_cf64_11e0_9572_0800200c9a66
);
::windows_core::imp::interface_hierarchy!(IFabricClientSettings, ::windows_core::IUnknown);
impl IFabricClientSettings {
    pub unsafe fn SetSecurityCredentials(
        &self,
        securitycredentials: *const super::super::FABRIC_SECURITY_CREDENTIALS,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).SetSecurityCredentials)(
            ::windows_core::Interface::as_raw(self),
            securitycredentials,
        )
        .ok()
    }
    pub unsafe fn SetKeepAlive(
        &self,
        keepaliveintervalinseconds: u32,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).SetKeepAlive)(
            ::windows_core::Interface::as_raw(self),
            keepaliveintervalinseconds,
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClientSettings {}
unsafe impl ::core::marker::Sync for IFabricClientSettings {}
#[repr(C)]
pub struct IFabricClientSettings_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub SetSecurityCredentials: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SECURITY_CREDENTIALS,
    ) -> ::windows_core::HRESULT,
    pub SetKeepAlive:
        unsafe extern "system" fn(*mut ::core::ffi::c_void, u32) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClientSettings2,
    IFabricClientSettings2_Vtbl,
    0xc6fb97f7_82f3_4e6c_a80a_021e8ffca425
);
::windows_core::imp::interface_hierarchy!(
    IFabricClientSettings2,
    ::windows_core::IUnknown,
    IFabricClientSettings
);
impl IFabricClientSettings2 {
    pub unsafe fn SetSecurityCredentials(
        &self,
        securitycredentials: *const super::super::FABRIC_SECURITY_CREDENTIALS,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .SetSecurityCredentials)(
            ::windows_core::Interface::as_raw(self), securitycredentials
        )
        .ok()
    }
    pub unsafe fn SetKeepAlive(
        &self,
        keepaliveintervalinseconds: u32,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).base__.SetKeepAlive)(
            ::windows_core::Interface::as_raw(self),
            keepaliveintervalinseconds,
        )
        .ok()
    }
    pub unsafe fn GetSettings(&self) -> ::windows_core::Result<IFabricClientSettingsResult> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetSettings)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn SetSettings(
        &self,
        fabricclientsettings: *const super::super::FABRIC_CLIENT_SETTINGS,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).SetSettings)(
            ::windows_core::Interface::as_raw(self),
            fabricclientsettings,
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClientSettings2 {}
unsafe impl ::core::marker::Sync for IFabricClientSettings2 {}
#[repr(C)]
pub struct IFabricClientSettings2_Vtbl {
    pub base__: IFabricClientSettings_Vtbl,
    pub GetSettings: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub SetSettings: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLIENT_SETTINGS,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClientSettingsResult,
    IFabricClientSettingsResult_Vtbl,
    0x3b825afd_cb31_4589_961e_e3778aa23a60
);
::windows_core::imp::interface_hierarchy!(IFabricClientSettingsResult, ::windows_core::IUnknown);
impl IFabricClientSettingsResult {
    pub unsafe fn get_Settings(&self) -> *mut super::super::FABRIC_CLIENT_SETTINGS {
        (::windows_core::Interface::vtable(self).get_Settings)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricClientSettingsResult {}
unsafe impl ::core::marker::Sync for IFabricClientSettingsResult {}
#[repr(C)]
pub struct IFabricClientSettingsResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Settings: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_CLIENT_SETTINGS,
}
::windows_core::imp::com_interface!(
    IFabricClusterHealthResult,
    IFabricClusterHealthResult_Vtbl,
    0x6b9b0f2c_6782_4a31_a256_570fa8ba32d3
);
::windows_core::imp::interface_hierarchy!(IFabricClusterHealthResult, ::windows_core::IUnknown);
impl IFabricClusterHealthResult {
    pub unsafe fn get_ClusterHealth(&self) -> *mut super::super::FABRIC_CLUSTER_HEALTH {
        (::windows_core::Interface::vtable(self).get_ClusterHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricClusterHealthResult {}
unsafe impl ::core::marker::Sync for IFabricClusterHealthResult {}
#[repr(C)]
pub struct IFabricClusterHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ClusterHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_CLUSTER_HEALTH,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient,
    IFabricClusterManagementClient_Vtbl,
    0xa3cf17e0_cf84_4ae0_b720_1785c0fb4ace
);
::windows_core::imp::interface_hierarchy!(IFabricClusterManagementClient, ::windows_core::IUnknown);
impl IFabricClusterManagementClient {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient {}
#[repr(C)]
pub struct IFabricClusterManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginNodeStateRemoved: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndNodeStateRemoved: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRecoverPartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRecoverPartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient10,
    IFabricClusterManagementClient10_Vtbl,
    0xa4aceb4f_2e2b_4be1_9d12_44fe8cb5fb20
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient10,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient5,
    IFabricClusterManagementClient6,
    IFabricClusterManagementClient7,
    IFabricClusterManagementClient8,
    IFabricClusterManagementClient9
);
impl IFabricClusterManagementClient10 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginToggleVerboseServicePlacementHealthReporting<P0, P1>(
        &self,
        enabled: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            enabled.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndToggleVerboseServicePlacementHealthReporting<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeConfiguration<P0>(
        &self,
        startupgradedescription: *const super::super::FABRIC_START_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            startupgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeConfiguration<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricOrchestrationUpgradeStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterConfiguration<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfiguration<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradesPendingApproval<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradesPendingApproval<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartApprovedUpgrades<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartApprovedUpgrades<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradeOrchestrationServiceState<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradeOrchestrationServiceState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginSetUpgradeOrchestrationServiceState<P0, P1>(
        &self,
        state: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginSetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            state.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSetUpgradeOrchestrationServiceState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeOrchestrationServiceStateResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndSetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterConfiguration2<P0, P1>(
        &self,
        apiversion: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterConfiguration2)(
            ::windows_core::Interface::as_raw(self),
            apiversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfiguration2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterConfiguration2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient10 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient10 {}
#[repr(C)]
pub struct IFabricClusterManagementClient10_Vtbl {
    pub base__: IFabricClusterManagementClient9_Vtbl,
    pub BeginGetClusterConfiguration2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetClusterConfiguration2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient2_Vtbl,
    0xf9493e16_6a49_4d79_8695_5a6826b504c5
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient2,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient
);
impl IFabricClusterManagementClient2 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient2 {}
#[repr(C)]
pub struct IFabricClusterManagementClient2_Vtbl {
    pub base__: IFabricClusterManagementClient_Vtbl,
    pub BeginDeactivateNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeactivateNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginActivateNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndActivateNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginProvisionFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndProvisionFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginUpgradeFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpgradeFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetFabricUpgradeProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetFabricUpgradeProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMoveNextFabricUpgradeDomain: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndMoveNextFabricUpgradeDomain: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMoveNextFabricUpgradeDomain2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndMoveNextFabricUpgradeDomain2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginUnprovisionFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUnprovisionFabric: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetClusterManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetClusterManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRecoverPartition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRecoverPartition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRecoverServicePartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRecoverServicePartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRecoverSystemPartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRecoverSystemPartitions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient3_Vtbl,
    0xc3001d74_92b6_44cb_ac2f_2ffc4a56287c
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient3,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2
);
impl IFabricClusterManagementClient3 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self).CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self).RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient3 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient3 {}
#[repr(C)]
pub struct IFabricClusterManagementClient3_Vtbl {
    pub base__: IFabricClusterManagementClient2_Vtbl,
    pub BeginUpdateFabricUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpdateFabricUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStopNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStopNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRestartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRestartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_NODE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub CopyClusterPackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
    ) -> ::windows_core::HRESULT,
    pub RemoveClusterPackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient4_Vtbl,
    0xb6b12671_f283_4d71_a818_0260549bc83e
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient4,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3
);
impl IFabricClusterManagementClient4 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).base__.BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient4 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient4 {}
#[repr(C)]
pub struct IFabricClusterManagementClient4_Vtbl {
    pub base__: IFabricClusterManagementClient3_Vtbl,
    pub BeginRollbackFabricUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRollbackFabricUpgrade: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient5,
    IFabricClusterManagementClient5_Vtbl,
    0xa6ddd816_a100_11e4_89d3_123b93f75cba
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient5,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4
);
impl IFabricClusterManagementClient5 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient5 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient5 {}
#[repr(C)]
pub struct IFabricClusterManagementClient5_Vtbl {
    pub base__: IFabricClusterManagementClient4_Vtbl,
    pub BeginResetPartitionLoad: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndResetPartitionLoad: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient6,
    IFabricClusterManagementClient6_Vtbl,
    0x9e454ae8_4b8c_4136_884a_37b0b92cc855
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient6,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient5
);
impl IFabricClusterManagementClient6 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginToggleVerboseServicePlacementHealthReporting<P0, P1>(
        &self,
        enabled: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            enabled.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndToggleVerboseServicePlacementHealthReporting<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient6 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient6 {}
#[repr(C)]
pub struct IFabricClusterManagementClient6_Vtbl {
    pub base__: IFabricClusterManagementClient5_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginToggleVerboseServicePlacementHealthReporting:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            ::windows::Win32::Foundation::BOOLEAN,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginToggleVerboseServicePlacementHealthReporting: usize,
    pub EndToggleVerboseServicePlacementHealthReporting:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient7,
    IFabricClusterManagementClient7_Vtbl,
    0x9b9105ac_d595_4f59_9c94_1ffdbf92a876
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient7,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient5,
    IFabricClusterManagementClient6
);
impl IFabricClusterManagementClient7 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginToggleVerboseServicePlacementHealthReporting<P0, P1>(
        &self,
        enabled: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            enabled.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndToggleVerboseServicePlacementHealthReporting<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeConfiguration<P0>(
        &self,
        startupgradedescription: *const super::super::FABRIC_START_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            startupgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeConfiguration<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricOrchestrationUpgradeStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterConfiguration<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfiguration<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradesPendingApproval<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradesPendingApproval<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartApprovedUpgrades<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartApprovedUpgrades<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient7 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient7 {}
#[repr(C)]
pub struct IFabricClusterManagementClient7_Vtbl {
    pub base__: IFabricClusterManagementClient6_Vtbl,
    pub BeginUpgradeConfiguration: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_UPGRADE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpgradeConfiguration: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetClusterConfigurationUpgradeStatus:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndGetClusterConfigurationUpgradeStatus:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub BeginGetClusterConfiguration: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetClusterConfiguration: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetUpgradesPendingApproval: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetUpgradesPendingApproval: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStartApprovedUpgrades: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartApprovedUpgrades: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient8,
    IFabricClusterManagementClient8_Vtbl,
    0x0b79641c_79a6_4162_904a_840babd08381
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient8,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient5,
    IFabricClusterManagementClient6,
    IFabricClusterManagementClient7
);
impl IFabricClusterManagementClient8 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginToggleVerboseServicePlacementHealthReporting<P0, P1>(
        &self,
        enabled: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            enabled.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndToggleVerboseServicePlacementHealthReporting<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeConfiguration<P0>(
        &self,
        startupgradedescription: *const super::super::FABRIC_START_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            startupgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeConfiguration<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricOrchestrationUpgradeStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterConfiguration<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfiguration<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradesPendingApproval<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradesPendingApproval<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartApprovedUpgrades<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartApprovedUpgrades<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient8 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient8 {}
#[repr(C)]
pub struct IFabricClusterManagementClient8_Vtbl {
    pub base__: IFabricClusterManagementClient7_Vtbl,
    pub BeginGetClusterManifest2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetClusterManifest2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricClusterManagementClient9,
    IFabricClusterManagementClient9_Vtbl,
    0xc0f57578_538c_4cbe_bb55_8098b6a7cd4e
);
::windows_core::imp::interface_hierarchy!(
    IFabricClusterManagementClient9,
    ::windows_core::IUnknown,
    IFabricClusterManagementClient,
    IFabricClusterManagementClient2,
    IFabricClusterManagementClient3,
    IFabricClusterManagementClient4,
    IFabricClusterManagementClient5,
    IFabricClusterManagementClient6,
    IFabricClusterManagementClient7,
    IFabricClusterManagementClient8
);
impl IFabricClusterManagementClient9 {
    pub unsafe fn BeginNodeStateRemoved<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNodeStateRemoved<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndNodeStateRemoved)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeactivateNode<P0, P1>(
        &self,
        nodename: P0,
        intent: super::super::FABRIC_NODE_DEACTIVATION_INTENT,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            intent,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeactivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeactivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginActivateNode<P0, P1>(
        &self,
        nodename: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginActivateNode)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndActivateNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndActivateNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginProvisionFabric<P0, P1, P2>(
        &self,
        codefilepath: P0,
        clustermanifestfilepath: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codefilepath.into_param().abi(),
            clustermanifestfilepath.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndProvisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndProvisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeFabric<P0>(
        &self,
        upgradedescription: *const super::super::FABRIC_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            upgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpgradeFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetFabricUpgradeProgress<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetFabricUpgradeProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeProgressResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetFabricUpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain<P0, P1>(
        &self,
        progress: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult2>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            progress.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginMoveNextFabricUpgradeDomain2<P0, P1>(
        &self,
        nextupgradedomain: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            nextupgradedomain.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveNextFabricUpgradeDomain2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndMoveNextFabricUpgradeDomain2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUnprovisionFabric<P0, P1, P2>(
        &self,
        codeversion: P0,
        configversion: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            codeversion.into_param().abi(),
            configversion.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnprovisionFabric<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUnprovisionFabric)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRecoverPartition<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverPartition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverPartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverServicePartitions<P0>(
        &self,
        servicename: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverServicePartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverServicePartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRecoverSystemPartitions<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRecoverSystemPartitions<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRecoverSystemPartitions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpdateFabricUpgrade<P0>(
        &self,
        description: *const super::super::FABRIC_UPGRADE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndUpdateFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        stopnodedescription: *const super::super::FABRIC_STOP_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            stopnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        restartnodedescription: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            restartnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        startnodedescription: *const super::super::FABRIC_START_NODE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            startnodedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn CopyClusterPackage<P0, P1, P2, P3, P4>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpath: P1,
        clustermanifestpathinimagestore: P2,
        codepackagepath: P3,
        codepackagepathinimagestore: P4,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P4: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .CopyClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpath.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepath.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn RemoveClusterPackage<P0, P1, P2>(
        &self,
        imagestoreconnectionstring: P0,
        clustermanifestpathinimagestore: P1,
        codepackagepathinimagestore: P2,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .RemoveClusterPackage)(
            ::windows_core::Interface::as_raw(self),
            imagestoreconnectionstring.into_param().abi(),
            clustermanifestpathinimagestore.into_param().abi(),
            codepackagepathinimagestore.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRollbackFabricUpgrade<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRollbackFabricUpgrade<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndRollbackFabricUpgrade)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginResetPartitionLoad<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResetPartitionLoad<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndResetPartitionLoad)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginToggleVerboseServicePlacementHealthReporting<P0, P1>(
        &self,
        enabled: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            enabled.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndToggleVerboseServicePlacementHealthReporting<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndToggleVerboseServicePlacementHealthReporting)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginUpgradeConfiguration<P0>(
        &self,
        startupgradedescription: *const super::super::FABRIC_START_UPGRADE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            startupgradedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpgradeConfiguration<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpgradeConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfigurationUpgradeStatus<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricOrchestrationUpgradeStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterConfigurationUpgradeStatus)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterConfiguration<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterConfiguration<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterConfiguration)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradesPendingApproval<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradesPendingApproval<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetUpgradesPendingApproval)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStartApprovedUpgrades<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartApprovedUpgrades<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartApprovedUpgrades)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetClusterManifest2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterManifest2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterManifest2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetUpgradeOrchestrationServiceState<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUpgradeOrchestrationServiceState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginSetUpgradeOrchestrationServiceState<P0, P1>(
        &self,
        state: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginSetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            state.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSetUpgradeOrchestrationServiceState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricUpgradeOrchestrationServiceStateResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndSetUpgradeOrchestrationServiceState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricClusterManagementClient9 {}
unsafe impl ::core::marker::Sync for IFabricClusterManagementClient9 {}
#[repr(C)]
pub struct IFabricClusterManagementClient9_Vtbl {
    pub base__: IFabricClusterManagementClient8_Vtbl,
    pub BeginGetUpgradeOrchestrationServiceState:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndGetUpgradeOrchestrationServiceState:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub BeginSetUpgradeOrchestrationServiceState:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            ::windows_core::PCWSTR,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndSetUpgradeOrchestrationServiceState:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricDeployedApplicationHealthResult,
    IFabricDeployedApplicationHealthResult_Vtbl,
    0x4df50bf4_7c28_4210_94f7_50625df6c942
);
::windows_core::imp::interface_hierarchy!(
    IFabricDeployedApplicationHealthResult,
    ::windows_core::IUnknown
);
impl IFabricDeployedApplicationHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_DeployedApplicationHealth(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH {
        (::windows_core::Interface::vtable(self).get_DeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricDeployedApplicationHealthResult {}
unsafe impl ::core::marker::Sync for IFabricDeployedApplicationHealthResult {}
#[repr(C)]
pub struct IFabricDeployedApplicationHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_DeployedApplicationHealth:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_DeployedApplicationHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricDeployedServicePackageHealthResult,
    IFabricDeployedServicePackageHealthResult_Vtbl,
    0x40991ce0_cdbb_44e9_9cdc_b14a5d5ea4c1
);
::windows_core::imp::interface_hierarchy!(
    IFabricDeployedServicePackageHealthResult,
    ::windows_core::IUnknown
);
impl IFabricDeployedServicePackageHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_DeployedServicePackageHealth(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH {
        (::windows_core::Interface::vtable(self).get_DeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricDeployedServicePackageHealthResult {}
unsafe impl ::core::marker::Sync for IFabricDeployedServicePackageHealthResult {}
#[repr(C)]
pub struct IFabricDeployedServicePackageHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_DeployedServicePackageHealth:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_DeployedServicePackageHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricFaultManagementClient,
    IFabricFaultManagementClient_Vtbl,
    0x769e1838_8726_4dcd_a3c0_211673a6967a
);
::windows_core::imp::interface_hierarchy!(IFabricFaultManagementClient, ::windows_core::IUnknown);
impl IFabricFaultManagementClient {
    pub unsafe fn BeginRestartNode<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_NODE_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRestartNode)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricRestartNodeResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndRestartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartNode<P0>(
        &self,
        description: *const super::super::FABRIC_START_NODE_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartNode)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricStartNodeResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndStartNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStopNode<P0>(
        &self,
        description: *const super::super::FABRIC_STOP_NODE_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStopNode)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopNode<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricStopNodeResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndStopNode)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRestartDeployedCodePackage<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartDeployedCodePackage<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricRestartDeployedCodePackageResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndRestartDeployedCodePackage)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMovePrimary<P0>(
        &self,
        description: *const super::super::FABRIC_MOVE_PRIMARY_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMovePrimary)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMovePrimary<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricMovePrimaryResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndMovePrimary)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginMoveSecondary<P0>(
        &self,
        description: *const super::super::FABRIC_MOVE_SECONDARY_DESCRIPTION2,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginMoveSecondary)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndMoveSecondary<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricMoveSecondaryResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndMoveSecondary)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricFaultManagementClient {}
unsafe impl ::core::marker::Sync for IFabricFaultManagementClient {}
#[repr(C)]
pub struct IFabricFaultManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginRestartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_RESTART_NODE_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRestartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_NODE_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStopNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_STOP_NODE_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStopNode: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRestartDeployedCodePackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRestartDeployedCodePackage: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMovePrimary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_MOVE_PRIMARY_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndMovePrimary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginMoveSecondary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_MOVE_SECONDARY_DESCRIPTION2,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndMoveSecondary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricGatewayInformationResult,
    IFabricGatewayInformationResult_Vtbl,
    0xa57e7740_fa33_448e_9f35_8bf802a713aa
);
::windows_core::imp::interface_hierarchy!(
    IFabricGatewayInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGatewayInformationResult {
    pub unsafe fn get_GatewayInformation(&self) -> *mut super::super::FABRIC_GATEWAY_INFORMATION {
        (::windows_core::Interface::vtable(self).get_GatewayInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGatewayInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGatewayInformationResult {}
#[repr(C)]
pub struct IFabricGatewayInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_GatewayInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_GATEWAY_INFORMATION,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationListResult,
    IFabricGetApplicationListResult_Vtbl,
    0xf038c61e_7059_41b6_8dea_d304a2080f46
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationListResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationListResult {
    pub unsafe fn get_ApplicationList(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ApplicationList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationListResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationListResult {}
#[repr(C)]
pub struct IFabricGetApplicationListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationListResult2,
    IFabricGetApplicationListResult2_Vtbl,
    0x6637a860_26bc_4f1a_902f_f418fcfe1e51
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationListResult2,
    ::windows_core::IUnknown,
    IFabricGetApplicationListResult
);
impl IFabricGetApplicationListResult2 {
    pub unsafe fn get_ApplicationList(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_ApplicationList)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationListResult2 {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationListResult2 {}
#[repr(C)]
pub struct IFabricGetApplicationListResult2_Vtbl {
    pub base__: IFabricGetApplicationListResult_Vtbl,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationLoadInformationResult,
    IFabricGetApplicationLoadInformationResult_Vtbl,
    0x38fd0512_7586_4bd5_9616_b7070cf025c0
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationLoadInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationLoadInformationResult {
    pub unsafe fn get_ApplicationLoadInformation(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_LOAD_INFORMATION {
        (::windows_core::Interface::vtable(self).get_ApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationLoadInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationLoadInformationResult {}
#[repr(C)]
pub struct IFabricGetApplicationLoadInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationLoadInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_LOAD_INFORMATION,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationNameResult,
    IFabricGetApplicationNameResult_Vtbl,
    0x258dbcc8_ac9a_47ff_838b_57ff506c73b1
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationNameResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationNameResult {
    pub unsafe fn get_ApplicationName(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_NAME_QUERY_RESULT {
        (::windows_core::Interface::vtable(self).get_ApplicationName)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationNameResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationNameResult {}
#[repr(C)]
pub struct IFabricGetApplicationNameResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationName:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_NAME_QUERY_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationNetworkListResult,
    IFabricGetApplicationNetworkListResult_Vtbl,
    0x4f9d0390_aa08_4dee_ba49_62891eb47c37
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationNetworkListResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationNetworkListResult {
    pub unsafe fn get_ApplicationNetworkList(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_NETWORK_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ApplicationNetworkList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationNetworkListResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationNetworkListResult {}
#[repr(C)]
pub struct IFabricGetApplicationNetworkListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ApplicationNetworkList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_APPLICATION_NETWORK_QUERY_RESULT_LIST , pub get_PagingStatus :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PAGING_STATUS , }
::windows_core::imp::com_interface!(
    IFabricGetApplicationTypeListResult,
    IFabricGetApplicationTypeListResult_Vtbl,
    0x944f7a70_224e_4191_8dd1_bba46dc88dd2
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationTypeListResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationTypeListResult {
    pub unsafe fn get_ApplicationTypeList(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationTypeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationTypeListResult {}
#[repr(C)]
pub struct IFabricGetApplicationTypeListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationTypeList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetApplicationTypePagedListResult,
    IFabricGetApplicationTypePagedListResult_Vtbl,
    0x5d8dde9c_05e8_428d_b494_43873d7c2db8
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetApplicationTypePagedListResult,
    ::windows_core::IUnknown
);
impl IFabricGetApplicationTypePagedListResult {
    pub unsafe fn get_ApplicationTypePagedList(
        &self,
    ) -> *mut super::super::FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ApplicationTypePagedList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetApplicationTypePagedListResult {}
unsafe impl ::core::marker::Sync for IFabricGetApplicationTypePagedListResult {}
#[repr(C)]
pub struct IFabricGetApplicationTypePagedListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ApplicationTypePagedList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetClusterHealthChunkResult,
    IFabricGetClusterHealthChunkResult_Vtbl,
    0x7fefcf06_c840_4d8a_9cc7_36f080e0e121
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetClusterHealthChunkResult,
    ::windows_core::IUnknown
);
impl IFabricGetClusterHealthChunkResult {
    pub unsafe fn get_ClusterHealthChunk(&self) -> *mut super::super::FABRIC_CLUSTER_HEALTH_CHUNK {
        (::windows_core::Interface::vtable(self).get_ClusterHealthChunk)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetClusterHealthChunkResult {}
unsafe impl ::core::marker::Sync for IFabricGetClusterHealthChunkResult {}
#[repr(C)]
pub struct IFabricGetClusterHealthChunkResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ClusterHealthChunk:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_CLUSTER_HEALTH_CHUNK,
}
::windows_core::imp::com_interface!(
    IFabricGetClusterLoadInformationResult,
    IFabricGetClusterLoadInformationResult_Vtbl,
    0x7cc3eb08_0e69_4e52_81fc_0190ab997dbf
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetClusterLoadInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetClusterLoadInformationResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ClusterLoadInformation(
        &self,
    ) -> *mut super::super::FABRIC_CLUSTER_LOAD_INFORMATION {
        (::windows_core::Interface::vtable(self).get_ClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetClusterLoadInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetClusterLoadInformationResult {}
#[repr(C)]
pub struct IFabricGetClusterLoadInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ClusterLoadInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_CLUSTER_LOAD_INFORMATION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ClusterLoadInformation: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetDeployedApplicationListResult,
    IFabricGetDeployedApplicationListResult_Vtbl,
    0x5722b789_3936_4c33_9f7a_342967457612
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedApplicationListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedApplicationListResult {
    pub unsafe fn get_DeployedApplicationList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedApplicationListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedApplicationListResult {}
#[repr(C)]
pub struct IFabricGetDeployedApplicationListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedApplicationList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedApplicationPagedListResult,
    IFabricGetDeployedApplicationPagedListResult_Vtbl,
    0xebd76f6f_508e_43ea_9ca2_a98ea2c0e846
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedApplicationPagedListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedApplicationPagedListResult {
    pub unsafe fn get_DeployedApplicationPagedList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedApplicationPagedList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedApplicationPagedListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedApplicationPagedListResult {}
#[repr(C)]
pub struct IFabricGetDeployedApplicationPagedListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedApplicationPagedList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST , pub get_PagingStatus :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PAGING_STATUS , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedCodePackageListResult,
    IFabricGetDeployedCodePackageListResult_Vtbl,
    0x3f390652_c0dc_4919_8a7f_8ae1e827de0c
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedCodePackageListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedCodePackageListResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_DeployedCodePackageList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedCodePackageListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedCodePackageListResult {}
#[repr(C)]
pub struct IFabricGetDeployedCodePackageListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , # [ cfg ( feature = "Win32_Foundation" ) ] pub get_DeployedCodePackageList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_LIST , # [ cfg ( not ( feature = "Win32_Foundation" ) ) ] get_DeployedCodePackageList :usize , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedNetworkCodePackageListResult,
    IFabricGetDeployedNetworkCodePackageListResult_Vtbl,
    0x6586d264_a96e_4f46_9388_189de5d61d6d
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedNetworkCodePackageListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedNetworkCodePackageListResult {
    pub unsafe fn get_DeployedNetworkCodePackageList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedNetworkCodePackageList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedNetworkCodePackageListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedNetworkCodePackageListResult {}
#[repr(C)]
pub struct IFabricGetDeployedNetworkCodePackageListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedNetworkCodePackageList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_LIST , pub get_PagingStatus :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PAGING_STATUS , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedNetworkListResult,
    IFabricGetDeployedNetworkListResult_Vtbl,
    0x347f5d8c_1abd_48e1_a7d1_9083556dafd3
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedNetworkListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedNetworkListResult {
    pub unsafe fn get_DeployedNetworkList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedNetworkList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedNetworkListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedNetworkListResult {}
#[repr(C)]
pub struct IFabricGetDeployedNetworkListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_DeployedNetworkList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_LIST,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetDeployedReplicaListResult,
    IFabricGetDeployedReplicaListResult_Vtbl,
    0x29e064bf_5d78_49e5_baa6_acfc24a4a8b5
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedReplicaListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedReplicaListResult {
    pub unsafe fn get_DeployedReplicaList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedReplicaListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedReplicaListResult {}
#[repr(C)]
pub struct IFabricGetDeployedReplicaListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedReplicaList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedServicePackageListResult,
    IFabricGetDeployedServicePackageListResult_Vtbl,
    0x65851388_0421_4107_977b_39f4e15440d4
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedServicePackageListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedServicePackageListResult {
    pub unsafe fn get_DeployedServicePackageList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedServicePackageListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedServicePackageListResult {}
#[repr(C)]
pub struct IFabricGetDeployedServicePackageListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedServicePackageList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedServiceReplicaDetailResult,
    IFabricGetDeployedServiceReplicaDetailResult_Vtbl,
    0x6d9d355e_89cf_4928_b758_b11ca4664fbe
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedServiceReplicaDetailResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedServiceReplicaDetailResult {
    pub unsafe fn get_ReplicaDetail(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM {
        (::windows_core::Interface::vtable(self).get_ReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedServiceReplicaDetailResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedServiceReplicaDetailResult {}
#[repr(C)]
pub struct IFabricGetDeployedServiceReplicaDetailResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ReplicaDetail :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM , }
::windows_core::imp::com_interface!(
    IFabricGetDeployedServiceTypeListResult,
    IFabricGetDeployedServiceTypeListResult_Vtbl,
    0xdba68c7a_3f77_49bb_b611_ff94df062b8d
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetDeployedServiceTypeListResult,
    ::windows_core::IUnknown
);
impl IFabricGetDeployedServiceTypeListResult {
    pub unsafe fn get_DeployedServiceTypeList(
        &self,
    ) -> *mut super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_DeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetDeployedServiceTypeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetDeployedServiceTypeListResult {}
#[repr(C)]
pub struct IFabricGetDeployedServiceTypeListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_DeployedServiceTypeList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetNetworkApplicationListResult,
    IFabricGetNetworkApplicationListResult_Vtbl,
    0xad1f51ff_e244_498e_9f72_609b01124b84
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetNetworkApplicationListResult,
    ::windows_core::IUnknown
);
impl IFabricGetNetworkApplicationListResult {
    pub unsafe fn get_NetworkApplicationList(
        &self,
    ) -> *mut super::super::FABRIC_NETWORK_APPLICATION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_NetworkApplicationList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetNetworkApplicationListResult {}
unsafe impl ::core::marker::Sync for IFabricGetNetworkApplicationListResult {}
#[repr(C)]
pub struct IFabricGetNetworkApplicationListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_NetworkApplicationList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_NETWORK_APPLICATION_QUERY_RESULT_LIST , pub get_PagingStatus :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PAGING_STATUS , }
::windows_core::imp::com_interface!(
    IFabricGetNetworkListResult,
    IFabricGetNetworkListResult_Vtbl,
    0xbd777a0f_2020_40bb_8f23_8756649cce47
);
::windows_core::imp::interface_hierarchy!(IFabricGetNetworkListResult, ::windows_core::IUnknown);
impl IFabricGetNetworkListResult {
    pub unsafe fn get_NetworkList(&self) -> *mut super::super::FABRIC_NETWORK_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_NetworkList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetNetworkListResult {}
unsafe impl ::core::marker::Sync for IFabricGetNetworkListResult {}
#[repr(C)]
pub struct IFabricGetNetworkListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_NetworkList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_NETWORK_QUERY_RESULT_LIST,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetNetworkNodeListResult,
    IFabricGetNetworkNodeListResult_Vtbl,
    0x3ba780e9_58eb_478d_bc89_42c89e19d083
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetNetworkNodeListResult,
    ::windows_core::IUnknown
);
impl IFabricGetNetworkNodeListResult {
    pub unsafe fn get_NetworkNodeList(
        &self,
    ) -> *mut super::super::FABRIC_NETWORK_NODE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_NetworkNodeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetNetworkNodeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetNetworkNodeListResult {}
#[repr(C)]
pub struct IFabricGetNetworkNodeListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_NetworkNodeList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_NETWORK_NODE_QUERY_RESULT_LIST,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetNodeListResult,
    IFabricGetNodeListResult_Vtbl,
    0x7cc3eb08_0e69_4e52_81fc_0190ab997dbe
);
::windows_core::imp::interface_hierarchy!(IFabricGetNodeListResult, ::windows_core::IUnknown);
impl IFabricGetNodeListResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_NodeList(&self) -> *mut super::super::FABRIC_NODE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_NodeList)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricGetNodeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetNodeListResult {}
#[repr(C)]
pub struct IFabricGetNodeListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_NodeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_NODE_QUERY_RESULT_LIST,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_NodeList: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetNodeListResult2,
    IFabricGetNodeListResult2_Vtbl,
    0x4a0f2da7_f851_44e5_8e12_aa521076097a
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetNodeListResult2,
    ::windows_core::IUnknown,
    IFabricGetNodeListResult
);
impl IFabricGetNodeListResult2 {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_NodeList(&self) -> *mut super::super::FABRIC_NODE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).base__.get_NodeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetNodeListResult2 {}
unsafe impl ::core::marker::Sync for IFabricGetNodeListResult2 {}
#[repr(C)]
pub struct IFabricGetNodeListResult2_Vtbl {
    pub base__: IFabricGetNodeListResult_Vtbl,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetNodeLoadInformationResult,
    IFabricGetNodeLoadInformationResult_Vtbl,
    0x4332eb3a_aed6_86fe_c2fa_653123dea09b
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetNodeLoadInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetNodeLoadInformationResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_NodeLoadInformation(
        &self,
    ) -> *mut super::super::FABRIC_NODE_LOAD_INFORMATION {
        (::windows_core::Interface::vtable(self).get_NodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetNodeLoadInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetNodeLoadInformationResult {}
#[repr(C)]
pub struct IFabricGetNodeLoadInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_NodeLoadInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_NODE_LOAD_INFORMATION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_NodeLoadInformation: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetPartitionListResult,
    IFabricGetPartitionListResult_Vtbl,
    0xafc1266c_967b_4769_9f8a_b249c5887ee6
);
::windows_core::imp::interface_hierarchy!(IFabricGetPartitionListResult, ::windows_core::IUnknown);
impl IFabricGetPartitionListResult {
    pub unsafe fn get_PartitionList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_PartitionList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetPartitionListResult {}
unsafe impl ::core::marker::Sync for IFabricGetPartitionListResult {}
#[repr(C)]
pub struct IFabricGetPartitionListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_PartitionList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetPartitionListResult2,
    IFabricGetPartitionListResult2_Vtbl,
    0xb131b99a_d251_47b2_9d08_24ddd6793206
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetPartitionListResult2,
    ::windows_core::IUnknown,
    IFabricGetPartitionListResult
);
impl IFabricGetPartitionListResult2 {
    pub unsafe fn get_PartitionList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_PartitionList)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetPartitionListResult2 {}
unsafe impl ::core::marker::Sync for IFabricGetPartitionListResult2 {}
#[repr(C)]
pub struct IFabricGetPartitionListResult2_Vtbl {
    pub base__: IFabricGetPartitionListResult_Vtbl,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetPartitionLoadInformationResult,
    IFabricGetPartitionLoadInformationResult_Vtbl,
    0x46f1a40c_a4f3_409e_a7ec_6fd115f7acc7
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetPartitionLoadInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetPartitionLoadInformationResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_PartitionLoadInformation(
        &self,
    ) -> *mut super::super::FABRIC_PARTITION_LOAD_INFORMATION {
        (::windows_core::Interface::vtable(self).get_PartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetPartitionLoadInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetPartitionLoadInformationResult {}
#[repr(C)]
pub struct IFabricGetPartitionLoadInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_PartitionLoadInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_PARTITION_LOAD_INFORMATION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_PartitionLoadInformation: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetProvisionedCodeVersionListResult,
    IFabricGetProvisionedCodeVersionListResult_Vtbl,
    0xd042bdb6_4364_4818_b395_0e6b1a22cb11
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetProvisionedCodeVersionListResult,
    ::windows_core::IUnknown
);
impl IFabricGetProvisionedCodeVersionListResult {
    pub unsafe fn get_ProvisionedCodeVersionList(
        &self,
    ) -> *mut super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ProvisionedCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetProvisionedCodeVersionListResult {}
unsafe impl ::core::marker::Sync for IFabricGetProvisionedCodeVersionListResult {}
#[repr(C)]
pub struct IFabricGetProvisionedCodeVersionListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ProvisionedCodeVersionList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetProvisionedConfigVersionListResult,
    IFabricGetProvisionedConfigVersionListResult_Vtbl,
    0x1bbb9f78_e883_49d1_a998_7eb864fd4a0e
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetProvisionedConfigVersionListResult,
    ::windows_core::IUnknown
);
impl IFabricGetProvisionedConfigVersionListResult {
    pub unsafe fn get_ProvisionedConfigVersionList(
        &self,
    ) -> *mut super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ProvisionedConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetProvisionedConfigVersionListResult {}
unsafe impl ::core::marker::Sync for IFabricGetProvisionedConfigVersionListResult {}
#[repr(C)]
pub struct IFabricGetProvisionedConfigVersionListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ProvisionedConfigVersionList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetRepairTaskListResult,
    IFabricGetRepairTaskListResult_Vtbl,
    0x576b2462_5f69_4351_87c7_3ec2d1654a22
);
::windows_core::imp::interface_hierarchy!(IFabricGetRepairTaskListResult, ::windows_core::IUnknown);
impl IFabricGetRepairTaskListResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_Tasks(&self) -> *mut super::super::FABRIC_REPAIR_TASK_LIST {
        (::windows_core::Interface::vtable(self).get_Tasks)(::windows_core::Interface::as_raw(self))
    }
}
unsafe impl ::core::marker::Send for IFabricGetRepairTaskListResult {}
unsafe impl ::core::marker::Sync for IFabricGetRepairTaskListResult {}
#[repr(C)]
pub struct IFabricGetRepairTaskListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_Tasks: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_REPAIR_TASK_LIST,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_Tasks: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetReplicaListResult,
    IFabricGetReplicaListResult_Vtbl,
    0xe00d3761_3ac5_407d_a04f_1b59486217cf
);
::windows_core::imp::interface_hierarchy!(IFabricGetReplicaListResult, ::windows_core::IUnknown);
impl IFabricGetReplicaListResult {
    pub unsafe fn get_ReplicaList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ReplicaList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetReplicaListResult {}
unsafe impl ::core::marker::Sync for IFabricGetReplicaListResult {}
#[repr(C)]
pub struct IFabricGetReplicaListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ReplicaList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetReplicaListResult2,
    IFabricGetReplicaListResult2_Vtbl,
    0x0bc12f86_c157_4c0d_b274_01fb09145934
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetReplicaListResult2,
    ::windows_core::IUnknown,
    IFabricGetReplicaListResult
);
impl IFabricGetReplicaListResult2 {
    pub unsafe fn get_ReplicaList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_ReplicaList)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetReplicaListResult2 {}
unsafe impl ::core::marker::Sync for IFabricGetReplicaListResult2 {}
#[repr(C)]
pub struct IFabricGetReplicaListResult2_Vtbl {
    pub base__: IFabricGetReplicaListResult_Vtbl,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetReplicaLoadInformationResult,
    IFabricGetReplicaLoadInformationResult_Vtbl,
    0xe4190ca0_225c_11e4_8c21_0800200c9a66
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetReplicaLoadInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetReplicaLoadInformationResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ReplicaLoadInformation(
        &self,
    ) -> *mut super::super::FABRIC_REPLICA_LOAD_INFORMATION {
        (::windows_core::Interface::vtable(self).get_ReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetReplicaLoadInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetReplicaLoadInformationResult {}
#[repr(C)]
pub struct IFabricGetReplicaLoadInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ReplicaLoadInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_REPLICA_LOAD_INFORMATION,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ReplicaLoadInformation: usize,
}
::windows_core::imp::com_interface!(
    IFabricGetRollingUpgradeMonitoringPolicyResult,
    IFabricGetRollingUpgradeMonitoringPolicyResult_Vtbl,
    0x02bd6674_9c5a_4262_89a8_ac1a6a2fb5e9
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetRollingUpgradeMonitoringPolicyResult,
    ::windows_core::IUnknown
);
impl IFabricGetRollingUpgradeMonitoringPolicyResult {
    pub unsafe fn get_Policy(&self) -> *mut super::super::FABRIC_ROLLING_UPGRADE_MONITORING_POLICY {
        (::windows_core::Interface::vtable(self).get_Policy)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricGetRollingUpgradeMonitoringPolicyResult {}
unsafe impl ::core::marker::Sync for IFabricGetRollingUpgradeMonitoringPolicyResult {}
#[repr(C)]
pub struct IFabricGetRollingUpgradeMonitoringPolicyResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Policy:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_ROLLING_UPGRADE_MONITORING_POLICY,
}
::windows_core::imp::com_interface!(
    IFabricGetServiceGroupMemberListResult,
    IFabricGetServiceGroupMemberListResult_Vtbl,
    0xe9f7f574_fd07_4a71_9f22_9cf9ccf3c166
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetServiceGroupMemberListResult,
    ::windows_core::IUnknown
);
impl IFabricGetServiceGroupMemberListResult {
    pub unsafe fn get_ServiceGroupMemberList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceGroupMemberListResult {}
unsafe impl ::core::marker::Sync for IFabricGetServiceGroupMemberListResult {}
#[repr(C)]
pub struct IFabricGetServiceGroupMemberListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ServiceGroupMemberList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetServiceGroupMemberTypeListResult,
    IFabricGetServiceGroupMemberTypeListResult_Vtbl,
    0x5e572763_29a9_463a_b602_1332c0f60e6b
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetServiceGroupMemberTypeListResult,
    ::windows_core::IUnknown
);
impl IFabricGetServiceGroupMemberTypeListResult {
    pub unsafe fn get_ServiceGroupMemberTypeList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceGroupMemberTypeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetServiceGroupMemberTypeListResult {}
#[repr(C)]
pub struct IFabricGetServiceGroupMemberTypeListResult_Vtbl where { pub base__ : ::windows_core::IUnknown_Vtbl , pub get_ServiceGroupMemberTypeList :unsafe extern "system" fn ( * mut::core::ffi::c_void , ) -> *mut super::super:: FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_LIST , }
::windows_core::imp::com_interface!(
    IFabricGetServiceListResult,
    IFabricGetServiceListResult_Vtbl,
    0x9953e19a_ea1e_4a1f_bda4_ab42fdb77185
);
::windows_core::imp::interface_hierarchy!(IFabricGetServiceListResult, ::windows_core::IUnknown);
impl IFabricGetServiceListResult {
    pub unsafe fn get_ServiceList(&self) -> *mut super::super::FABRIC_SERVICE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ServiceList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceListResult {}
unsafe impl ::core::marker::Sync for IFabricGetServiceListResult {}
#[repr(C)]
pub struct IFabricGetServiceListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ServiceList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_SERVICE_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetServiceListResult2,
    IFabricGetServiceListResult2_Vtbl,
    0x30263683_4b25_4ec3_86d7_94ed86e7a8bf
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetServiceListResult2,
    ::windows_core::IUnknown,
    IFabricGetServiceListResult
);
impl IFabricGetServiceListResult2 {
    pub unsafe fn get_ServiceList(&self) -> *mut super::super::FABRIC_SERVICE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_ServiceList)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_PagingStatus(&self) -> *mut super::super::FABRIC_PAGING_STATUS {
        (::windows_core::Interface::vtable(self).get_PagingStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceListResult2 {}
unsafe impl ::core::marker::Sync for IFabricGetServiceListResult2 {}
#[repr(C)]
pub struct IFabricGetServiceListResult2_Vtbl {
    pub base__: IFabricGetServiceListResult_Vtbl,
    pub get_PagingStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_PAGING_STATUS,
}
::windows_core::imp::com_interface!(
    IFabricGetServiceNameResult,
    IFabricGetServiceNameResult_Vtbl,
    0xb64fb70c_fe53_4ca1_b6d9_23d1150fe76c
);
::windows_core::imp::interface_hierarchy!(IFabricGetServiceNameResult, ::windows_core::IUnknown);
impl IFabricGetServiceNameResult {
    pub unsafe fn get_ServiceName(&self) -> *mut super::super::FABRIC_SERVICE_NAME_QUERY_RESULT {
        (::windows_core::Interface::vtable(self).get_ServiceName)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceNameResult {}
unsafe impl ::core::marker::Sync for IFabricGetServiceNameResult {}
#[repr(C)]
pub struct IFabricGetServiceNameResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ServiceName:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_SERVICE_NAME_QUERY_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricGetServiceTypeListResult,
    IFabricGetServiceTypeListResult_Vtbl,
    0x886e4ad2_edb8_4734_9dd4_0e9a2be5238b
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetServiceTypeListResult,
    ::windows_core::IUnknown
);
impl IFabricGetServiceTypeListResult {
    pub unsafe fn get_ServiceTypeList(
        &self,
    ) -> *mut super::super::FABRIC_SERVICE_TYPE_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_ServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetServiceTypeListResult {}
unsafe impl ::core::marker::Sync for IFabricGetServiceTypeListResult {}
#[repr(C)]
pub struct IFabricGetServiceTypeListResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ServiceTypeList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_SERVICE_TYPE_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricGetUnplacedReplicaInformationResult,
    IFabricGetUnplacedReplicaInformationResult_Vtbl,
    0x9d86a611_3fd3_451b_9495_6a831f417473
);
::windows_core::imp::interface_hierarchy!(
    IFabricGetUnplacedReplicaInformationResult,
    ::windows_core::IUnknown
);
impl IFabricGetUnplacedReplicaInformationResult {
    pub unsafe fn get_UnplacedReplicaInformation(
        &self,
    ) -> *mut super::super::FABRIC_UNPLACED_REPLICA_INFORMATION {
        (::windows_core::Interface::vtable(self).get_UnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricGetUnplacedReplicaInformationResult {}
unsafe impl ::core::marker::Sync for IFabricGetUnplacedReplicaInformationResult {}
#[repr(C)]
pub struct IFabricGetUnplacedReplicaInformationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_UnplacedReplicaInformation:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_UNPLACED_REPLICA_INFORMATION,
}
::windows_core::imp::com_interface!(
    IFabricHealthClient,
    IFabricHealthClient_Vtbl,
    0x3d00d0be_7014_41da_9c5b_0a9ef46e2a43
);
::windows_core::imp::interface_hierarchy!(IFabricHealthClient, ::windows_core::IUnknown);
impl IFabricHealthClient {
    pub unsafe fn ReportHealth(
        &self,
        healthreport: *const super::super::FABRIC_HEALTH_REPORT,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).ReportHealth)(
            ::windows_core::Interface::as_raw(self),
            healthreport,
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth<P0>(
        &self,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth<P0, P1>(
        &self,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth<P0>(
        &self,
        applicationname: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth<P0>(
        &self,
        servicename: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        replicaid: i64,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            replicaid,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth<P0, P1>(
        &self,
        applicationname: *const u16,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth<P0, P1, P2>(
        &self,
        applicationname: *const u16,
        servicemanifestname: P0,
        nodename: P1,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicemanifestname.into_param().abi(),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricHealthClient {}
unsafe impl ::core::marker::Sync for IFabricHealthClient {}
#[repr(C)]
pub struct IFabricHealthClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub ReportHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_HEALTH_REPORT,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetClusterHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetClusterHealth: usize,
    pub EndGetClusterHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetNodeHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetNodeHealth: usize,
    pub EndGetNodeHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetApplicationHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetApplicationHealth: usize,
    pub EndGetApplicationHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetServiceHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetServiceHealth: usize,
    pub EndGetServiceHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetPartitionHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetPartitionHealth: usize,
    pub EndGetPartitionHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetReplicaHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        i64,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetReplicaHealth: usize,
    pub EndGetReplicaHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetDeployedApplicationHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetDeployedApplicationHealth: usize,
    pub EndGetDeployedApplicationHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetDeployedServicePackageHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetDeployedServicePackageHealth: usize,
    pub EndGetDeployedServicePackageHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricHealthClient2,
    IFabricHealthClient2_Vtbl,
    0x66cbc014_d7b3_4f81_a498_e580feb9a1f5
);
::windows_core::imp::interface_hierarchy!(
    IFabricHealthClient2,
    ::windows_core::IUnknown,
    IFabricHealthClient
);
impl IFabricHealthClient2 {
    pub unsafe fn ReportHealth(
        &self,
        healthreport: *const super::super::FABRIC_HEALTH_REPORT,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).base__.ReportHealth)(
            ::windows_core::Interface::as_raw(self),
            healthreport,
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth<P0>(
        &self,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth<P0, P1>(
        &self,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth<P0>(
        &self,
        applicationname: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth<P0>(
        &self,
        servicename: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        replicaid: i64,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            replicaid,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth<P0, P1>(
        &self,
        applicationname: *const u16,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth<P0, P1, P2>(
        &self,
        applicationname: *const u16,
        servicemanifestname: P0,
        nodename: P1,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicemanifestname.into_param().abi(),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth2<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricHealthClient2 {}
unsafe impl ::core::marker::Sync for IFabricHealthClient2 {}
#[repr(C)]
pub struct IFabricHealthClient2_Vtbl {
    pub base__: IFabricHealthClient_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetClusterHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetClusterHealth2: usize,
    pub EndGetClusterHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetNodeHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NODE_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetNodeHealth2: usize,
    pub EndGetNodeHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetApplicationHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetApplicationHealth2: usize,
    pub EndGetApplicationHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetServiceHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetServiceHealth2: usize,
    pub EndGetServiceHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetPartitionHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetPartitionHealth2: usize,
    pub EndGetPartitionHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetReplicaHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetReplicaHealth2: usize,
    pub EndGetReplicaHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetDeployedApplicationHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetDeployedApplicationHealth2: usize,
    pub EndGetDeployedApplicationHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetDeployedServicePackageHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetDeployedServicePackageHealth2: usize,
    pub EndGetDeployedServicePackageHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricHealthClient3,
    IFabricHealthClient3_Vtbl,
    0xdd3e4497_3373_458d_ad22_c88ebd27493e
);
::windows_core::imp::interface_hierarchy!(
    IFabricHealthClient3,
    ::windows_core::IUnknown,
    IFabricHealthClient,
    IFabricHealthClient2
);
impl IFabricHealthClient3 {
    pub unsafe fn ReportHealth(
        &self,
        healthreport: *const super::super::FABRIC_HEALTH_REPORT,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .ReportHealth)(::windows_core::Interface::as_raw(self), healthreport)
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth<P0>(
        &self,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth<P0, P1>(
        &self,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth<P0>(
        &self,
        applicationname: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth<P0>(
        &self,
        servicename: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        replicaid: i64,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            replicaid,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth<P0, P1>(
        &self,
        applicationname: *const u16,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth<P0, P1, P2>(
        &self,
        applicationname: *const u16,
        servicemanifestname: P0,
        nodename: P1,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicemanifestname.into_param().abi(),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth2<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealthChunk<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterHealthChunk)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealthChunk<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterHealthChunkResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterHealthChunk)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricHealthClient3 {}
unsafe impl ::core::marker::Sync for IFabricHealthClient3 {}
#[repr(C)]
pub struct IFabricHealthClient3_Vtbl {
    pub base__: IFabricHealthClient2_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetClusterHealthChunk: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetClusterHealthChunk: usize,
    pub EndGetClusterHealthChunk: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricHealthClient4,
    IFabricHealthClient4_Vtbl,
    0x9f0401af_4909_404f_8696_0a71bd753e98
);
::windows_core::imp::interface_hierarchy!(
    IFabricHealthClient4,
    ::windows_core::IUnknown,
    IFabricHealthClient,
    IFabricHealthClient2,
    IFabricHealthClient3
);
impl IFabricHealthClient4 {
    pub unsafe fn ReportHealth(
        &self,
        healthreport: *const super::super::FABRIC_HEALTH_REPORT,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .ReportHealth)(::windows_core::Interface::as_raw(self), healthreport)
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth<P0>(
        &self,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetClusterHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth<P0, P1>(
        &self,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_CLUSTER_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetNodeHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth<P0>(
        &self,
        applicationname: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth<P0>(
        &self,
        servicename: *const u16,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth<P0>(
        &self,
        partitionid: ::windows_core::GUID,
        replicaid: i64,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(partitionid),
            replicaid,
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth<P0, P1>(
        &self,
        applicationname: *const u16,
        nodename: P0,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth<P0, P1, P2>(
        &self,
        applicationname: *const u16,
        servicemanifestname: P0,
        nodename: P1,
        healthpolicy: *const super::super::FABRIC_APPLICATION_HEALTH_POLICY,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicemanifestname.into_param().abi(),
            nodename.into_param().abi(),
            healthpolicy,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageHealth)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricClusterHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetNodeHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetNodeHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetServiceHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetPartitionHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetReplicaHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricReplicaHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetReplicaHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationHealth2<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedApplicationHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedApplicationHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedServicePackageHealth2<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageHealth2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricDeployedServicePackageHealthResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedServicePackageHealth2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetClusterHealthChunk<P0>(
        &self,
        querydescription: *const super::super::FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterHealthChunk)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterHealthChunk<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterHealthChunkResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterHealthChunk)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn ReportHealth2(
        &self,
        healthreport: *const super::super::FABRIC_HEALTH_REPORT,
        sendoptions: *const super::super::FABRIC_HEALTH_REPORT_SEND_OPTIONS,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).ReportHealth2)(
            ::windows_core::Interface::as_raw(self),
            healthreport,
            sendoptions,
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricHealthClient4 {}
unsafe impl ::core::marker::Sync for IFabricHealthClient4 {}
#[repr(C)]
pub struct IFabricHealthClient4_Vtbl {
    pub base__: IFabricHealthClient3_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub ReportHealth2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_HEALTH_REPORT,
        *const super::super::FABRIC_HEALTH_REPORT_SEND_OPTIONS,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    ReportHealth2: usize,
}
::windows_core::imp::com_interface!(
    IFabricInfrastructureServiceClient,
    IFabricInfrastructureServiceClient_Vtbl,
    0xa0cfbc71_184b_443b_b102_4b6d0a7cbc49
);
::windows_core::imp::interface_hierarchy!(
    IFabricInfrastructureServiceClient,
    ::windows_core::IUnknown
);
impl IFabricInfrastructureServiceClient {
    pub unsafe fn BeginInvokeInfrastructureCommand<P0, P1>(
        &self,
        servicename: *const u16,
        command: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginInvokeInfrastructureCommand)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            command.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndInvokeInfrastructureCommand<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndInvokeInfrastructureCommand)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginInvokeInfrastructureQuery<P0, P1>(
        &self,
        servicename: *const u16,
        command: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginInvokeInfrastructureQuery)(
            ::windows_core::Interface::as_raw(self),
            servicename,
            command.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndInvokeInfrastructureQuery<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndInvokeInfrastructureQuery)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricInfrastructureServiceClient {}
unsafe impl ::core::marker::Sync for IFabricInfrastructureServiceClient {}
#[repr(C)]
pub struct IFabricInfrastructureServiceClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginInvokeInfrastructureCommand: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndInvokeInfrastructureCommand: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginInvokeInfrastructureQuery: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndInvokeInfrastructureQuery: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricMovePrimaryResult,
    IFabricMovePrimaryResult_Vtbl,
    0x66ac03f5_e61c_47a2_80fe_49309a02c92c
);
::windows_core::imp::interface_hierarchy!(IFabricMovePrimaryResult, ::windows_core::IUnknown);
impl IFabricMovePrimaryResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_MOVE_PRIMARY_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricMovePrimaryResult {}
unsafe impl ::core::marker::Sync for IFabricMovePrimaryResult {}
#[repr(C)]
pub struct IFabricMovePrimaryResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_MOVE_PRIMARY_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricMoveSecondaryResult,
    IFabricMoveSecondaryResult_Vtbl,
    0x60fe896a_b690_4abb_94fd_86c615d29bee
);
::windows_core::imp::interface_hierarchy!(IFabricMoveSecondaryResult, ::windows_core::IUnknown);
impl IFabricMoveSecondaryResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_MOVE_SECONDARY_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricMoveSecondaryResult {}
unsafe impl ::core::marker::Sync for IFabricMoveSecondaryResult {}
#[repr(C)]
pub struct IFabricMoveSecondaryResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_MOVE_SECONDARY_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricNameEnumerationResult,
    IFabricNameEnumerationResult_Vtbl,
    0x557e8105_f4f4_4fd3_9d21_075f34e2f98c
);
::windows_core::imp::interface_hierarchy!(IFabricNameEnumerationResult, ::windows_core::IUnknown);
impl IFabricNameEnumerationResult {
    pub unsafe fn get_EnumerationStatus(&self) -> super::super::FABRIC_ENUMERATION_STATUS {
        (::windows_core::Interface::vtable(self).get_EnumerationStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn GetNames(&self, itemcount: *mut u32) -> ::windows_core::Result<*mut *mut u16> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetNames)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricNameEnumerationResult {}
unsafe impl ::core::marker::Sync for IFabricNameEnumerationResult {}
#[repr(C)]
pub struct IFabricNameEnumerationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_EnumerationStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> super::super::FABRIC_ENUMERATION_STATUS,
    pub GetNames: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut *mut u16,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricNetworkManagementClient,
    IFabricNetworkManagementClient_Vtbl,
    0xfdb754c6_69c5_4bcf_bba5_cb70c84a4398
);
::windows_core::imp::interface_hierarchy!(IFabricNetworkManagementClient, ::windows_core::IUnknown);
impl IFabricNetworkManagementClient {
    pub unsafe fn BeginCreateNetwork<P0, P1>(
        &self,
        networkname: P0,
        description: *const super::super::FABRIC_NETWORK_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateNetwork)(
            ::windows_core::Interface::as_raw(self),
            networkname.into_param().abi(),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateNetwork<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateNetwork)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteNetwork<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_NETWORK_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteNetwork)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteNetwork<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteNetwork)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetNetworkList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NETWORK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNetworkList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNetworkList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNetworkListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNetworkList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNetworkApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NETWORK_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNetworkApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNetworkApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNetworkApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNetworkApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNetworkNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NETWORK_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNetworkNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNetworkNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNetworkNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNetworkNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationNetworkList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_NETWORK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationNetworkList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationNetworkList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationNetworkListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationNetworkList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedNetworkList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_NETWORK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedNetworkList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedNetworkList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedNetworkListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedNetworkList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedNetworkCodePackageList<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedNetworkCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedNetworkCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedNetworkCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedNetworkCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricNetworkManagementClient {}
unsafe impl ::core::marker::Sync for IFabricNetworkManagementClient {}
#[repr(C)]
pub struct IFabricNetworkManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginCreateNetwork: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        *const super::super::FABRIC_NETWORK_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateNetwork: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteNetwork: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DELETE_NETWORK_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteNetwork: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NETWORK_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetNetworkApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NETWORK_APPLICATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNetworkApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetNetworkNodeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NETWORK_NODE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNetworkNodeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetApplicationNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_NETWORK_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_NETWORK_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedNetworkList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedNetworkCodePackageList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const super::super::FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_DESCRIPTION,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndGetDeployedNetworkCodePackageList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricNodeHealthResult,
    IFabricNodeHealthResult_Vtbl,
    0xe461f70b_51b8_4b73_9f35_e38e5ac68719
);
::windows_core::imp::interface_hierarchy!(IFabricNodeHealthResult, ::windows_core::IUnknown);
impl IFabricNodeHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_NodeHealth(&self) -> *mut super::super::FABRIC_NODE_HEALTH {
        (::windows_core::Interface::vtable(self).get_NodeHealth)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricNodeHealthResult {}
unsafe impl ::core::marker::Sync for IFabricNodeHealthResult {}
#[repr(C)]
pub struct IFabricNodeHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_NodeHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_NODE_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_NodeHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricNodeTransitionProgressResult,
    IFabricNodeTransitionProgressResult_Vtbl,
    0x68a98626_6a1b_4dd8_ad93_74c0936e86aa
);
::windows_core::imp::interface_hierarchy!(
    IFabricNodeTransitionProgressResult,
    ::windows_core::IUnknown
);
impl IFabricNodeTransitionProgressResult {
    pub unsafe fn get_Progress(&self) -> *mut super::super::FABRIC_NODE_TRANSITION_PROGRESS {
        (::windows_core::Interface::vtable(self).get_Progress)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricNodeTransitionProgressResult {}
unsafe impl ::core::marker::Sync for IFabricNodeTransitionProgressResult {}
#[repr(C)]
pub struct IFabricNodeTransitionProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Progress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_NODE_TRANSITION_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricOrchestrationUpgradeStatusResult,
    IFabricOrchestrationUpgradeStatusResult_Vtbl,
    0x95a56e4a_490d_445e_865c_ef0a62f15504
);
::windows_core::imp::interface_hierarchy!(
    IFabricOrchestrationUpgradeStatusResult,
    ::windows_core::IUnknown
);
impl IFabricOrchestrationUpgradeStatusResult {
    pub unsafe fn get_Progress(&self) -> *mut super::super::FABRIC_ORCHESTRATION_UPGRADE_PROGRESS {
        (::windows_core::Interface::vtable(self).get_Progress)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricOrchestrationUpgradeStatusResult {}
unsafe impl ::core::marker::Sync for IFabricOrchestrationUpgradeStatusResult {}
#[repr(C)]
pub struct IFabricOrchestrationUpgradeStatusResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Progress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_ORCHESTRATION_UPGRADE_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricPartitionDataLossProgressResult,
    IFabricPartitionDataLossProgressResult_Vtbl,
    0x614921e6_75f1_44e7_9107_ab88819136b8
);
::windows_core::imp::interface_hierarchy!(
    IFabricPartitionDataLossProgressResult,
    ::windows_core::IUnknown
);
impl IFabricPartitionDataLossProgressResult {
    pub unsafe fn get_Progress(&self) -> *mut super::super::FABRIC_PARTITION_DATA_LOSS_PROGRESS {
        (::windows_core::Interface::vtable(self).get_Progress)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricPartitionDataLossProgressResult {}
unsafe impl ::core::marker::Sync for IFabricPartitionDataLossProgressResult {}
#[repr(C)]
pub struct IFabricPartitionDataLossProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Progress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_PARTITION_DATA_LOSS_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricPartitionHealthResult,
    IFabricPartitionHealthResult_Vtbl,
    0x10c9e99d_bb3f_4263_a7f7_abbaf3c03576
);
::windows_core::imp::interface_hierarchy!(IFabricPartitionHealthResult, ::windows_core::IUnknown);
impl IFabricPartitionHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_PartitionHealth(&self) -> *mut super::super::FABRIC_PARTITION_HEALTH {
        (::windows_core::Interface::vtable(self).get_PartitionHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricPartitionHealthResult {}
unsafe impl ::core::marker::Sync for IFabricPartitionHealthResult {}
#[repr(C)]
pub struct IFabricPartitionHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_PartitionHealth:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_PARTITION_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_PartitionHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricPartitionQuorumLossProgressResult,
    IFabricPartitionQuorumLossProgressResult_Vtbl,
    0x36d8e378_3706_403d_8d99_2afd1a120687
);
::windows_core::imp::interface_hierarchy!(
    IFabricPartitionQuorumLossProgressResult,
    ::windows_core::IUnknown
);
impl IFabricPartitionQuorumLossProgressResult {
    pub unsafe fn get_Progress(&self) -> *mut super::super::FABRIC_PARTITION_QUORUM_LOSS_PROGRESS {
        (::windows_core::Interface::vtable(self).get_Progress)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricPartitionQuorumLossProgressResult {}
unsafe impl ::core::marker::Sync for IFabricPartitionQuorumLossProgressResult {}
#[repr(C)]
pub struct IFabricPartitionQuorumLossProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Progress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_PARTITION_QUORUM_LOSS_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricPartitionRestartProgressResult,
    IFabricPartitionRestartProgressResult_Vtbl,
    0xd2cb2ee1_a1ba_4cbd_80f7_14fd3d55bb61
);
::windows_core::imp::interface_hierarchy!(
    IFabricPartitionRestartProgressResult,
    ::windows_core::IUnknown
);
impl IFabricPartitionRestartProgressResult {
    pub unsafe fn get_Progress(&self) -> *mut super::super::FABRIC_PARTITION_RESTART_PROGRESS {
        (::windows_core::Interface::vtable(self).get_Progress)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricPartitionRestartProgressResult {}
unsafe impl ::core::marker::Sync for IFabricPartitionRestartProgressResult {}
#[repr(C)]
pub struct IFabricPartitionRestartProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Progress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_PARTITION_RESTART_PROGRESS,
}
::windows_core::imp::com_interface!(
    IFabricPropertyBatchResult,
    IFabricPropertyBatchResult_Vtbl,
    0xee747ff5_3fbb_46a8_adbc_47ce09c48bbe
);
::windows_core::imp::interface_hierarchy!(IFabricPropertyBatchResult, ::windows_core::IUnknown);
impl IFabricPropertyBatchResult {
    pub unsafe fn GetProperty(
        &self,
        operationindexinrequest: u32,
    ) -> ::windows_core::Result<IFabricPropertyValueResult> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetProperty)(
            ::windows_core::Interface::as_raw(self),
            operationindexinrequest,
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyBatchResult {}
unsafe impl ::core::marker::Sync for IFabricPropertyBatchResult {}
#[repr(C)]
pub struct IFabricPropertyBatchResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub GetProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricPropertyEnumerationResult,
    IFabricPropertyEnumerationResult_Vtbl,
    0xa42da40d_a637_478d_83f3_2813871234cf
);
::windows_core::imp::interface_hierarchy!(
    IFabricPropertyEnumerationResult,
    ::windows_core::IUnknown
);
impl IFabricPropertyEnumerationResult {
    pub unsafe fn get_EnumerationStatus(&self) -> super::super::FABRIC_ENUMERATION_STATUS {
        (::windows_core::Interface::vtable(self).get_EnumerationStatus)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_PropertyCount(&self) -> u32 {
        (::windows_core::Interface::vtable(self).get_PropertyCount)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn GetProperty(
        &self,
        index: u32,
    ) -> ::windows_core::Result<IFabricPropertyValueResult> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetProperty)(
            ::windows_core::Interface::as_raw(self),
            index,
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyEnumerationResult {}
unsafe impl ::core::marker::Sync for IFabricPropertyEnumerationResult {}
#[repr(C)]
pub struct IFabricPropertyEnumerationResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_EnumerationStatus: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> super::super::FABRIC_ENUMERATION_STATUS,
    pub get_PropertyCount: unsafe extern "system" fn(*mut ::core::ffi::c_void) -> u32,
    pub GetProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricPropertyManagementClient,
    IFabricPropertyManagementClient_Vtbl,
    0x26e58816_b5d5_4f08_9770_dbf0410c99d6
);
::windows_core::imp::interface_hierarchy!(
    IFabricPropertyManagementClient,
    ::windows_core::IUnknown
);
impl IFabricPropertyManagementClient {
    pub unsafe fn BeginCreateName<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateName)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateName<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteName<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteName)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteName<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginNameExists<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginNameExists)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNameExists<P0>(&self, context: P0) -> ::windows_core::Result<u8>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndNameExists)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginEnumerateSubNames<P0, P1, P2>(
        &self,
        name: *const u16,
        previousresult: P0,
        recursive: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricNameEnumerationResult>,
        P1: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginEnumerateSubNames)(
            ::windows_core::Interface::as_raw(self),
            name,
            previousresult.into_param().abi(),
            recursive.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndEnumerateSubNames<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNameEnumerationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndEnumerateSubNames)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginPutPropertyBinary<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutPropertyBinary)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data.len().try_into().unwrap(),
            ::core::mem::transmute(data.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyBinary<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutPropertyBinary)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyInt64<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: i64,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutPropertyInt64)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyInt64<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutPropertyInt64)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyDouble<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: f64,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutPropertyDouble)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyDouble<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutPropertyDouble)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyWString<P0, P1, P2>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutPropertyWString)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyWString<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutPropertyWString)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyGuid<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: *const ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutPropertyGuid)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyGuid<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutPropertyGuid)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteProperty<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteProperty)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteProperty<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteProperty)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPropertyMetadata<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPropertyMetadata)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPropertyMetadata<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyMetadataResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPropertyMetadata)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProperty<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetProperty)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProperty<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyValueResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetProperty)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginSubmitPropertyBatch<P0>(
        &self,
        name: *const u16,
        operations: &[super::super::FABRIC_PROPERTY_BATCH_OPERATION],
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginSubmitPropertyBatch)(
            ::windows_core::Interface::as_raw(self),
            name,
            operations.len().try_into().unwrap(),
            ::core::mem::transmute(operations.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSubmitPropertyBatch<P0>(
        &self,
        context: P0,
        failedoperationindexinrequest: *mut u32,
    ) -> ::windows_core::Result<IFabricPropertyBatchResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndSubmitPropertyBatch)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            failedoperationindexinrequest,
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginEnumerateProperties<P0, P1, P2>(
        &self,
        name: *const u16,
        includevalues: P0,
        previousresult: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<IFabricPropertyEnumerationResult>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginEnumerateProperties)(
            ::windows_core::Interface::as_raw(self),
            name,
            includevalues.into_param().abi(),
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndEnumerateProperties<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyEnumerationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndEnumerateProperties)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyManagementClient {}
unsafe impl ::core::marker::Sync for IFabricPropertyManagementClient {}
#[repr(C)]
pub struct IFabricPropertyManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginCreateName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginNameExists: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndNameExists: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut u8,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginEnumerateSubNames: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *mut ::core::ffi::c_void,
        ::windows::Win32::Foundation::BOOLEAN,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginEnumerateSubNames: usize,
    pub EndEnumerateSubNames: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginPutPropertyBinary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *const u8,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutPropertyBinary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginPutPropertyInt64: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        i64,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutPropertyInt64: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginPutPropertyDouble: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        f64,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutPropertyDouble: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginPutPropertyWString: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutPropertyWString: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginPutPropertyGuid: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        *const ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutPropertyGuid: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPropertyMetadata: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetPropertyMetadata: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetProperty: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginSubmitPropertyBatch: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *const super::super::FABRIC_PROPERTY_BATCH_OPERATION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndSubmitPropertyBatch: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginEnumerateProperties: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        ::windows::Win32::Foundation::BOOLEAN,
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginEnumerateProperties: usize,
    pub EndEnumerateProperties: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricPropertyManagementClient2,
    IFabricPropertyManagementClient2_Vtbl,
    0x04991c28_3f9d_4a49_9322_a56d308965fd
);
::windows_core::imp::interface_hierarchy!(
    IFabricPropertyManagementClient2,
    ::windows_core::IUnknown,
    IFabricPropertyManagementClient
);
impl IFabricPropertyManagementClient2 {
    pub unsafe fn BeginCreateName<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateName)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateName<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndCreateName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteName<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteName)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteName<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndDeleteName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginNameExists<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginNameExists)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndNameExists<P0>(&self, context: P0) -> ::windows_core::Result<u8>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).base__.EndNameExists)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginEnumerateSubNames<P0, P1, P2>(
        &self,
        name: *const u16,
        previousresult: P0,
        recursive: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricNameEnumerationResult>,
        P1: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginEnumerateSubNames)(
            ::windows_core::Interface::as_raw(self),
            name,
            previousresult.into_param().abi(),
            recursive.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndEnumerateSubNames<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNameEnumerationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndEnumerateSubNames)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginPutPropertyBinary<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginPutPropertyBinary)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data.len().try_into().unwrap(),
            ::core::mem::transmute(data.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyBinary<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndPutPropertyBinary)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyInt64<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: i64,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginPutPropertyInt64)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyInt64<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndPutPropertyInt64)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyDouble<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: f64,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginPutPropertyDouble)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyDouble<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndPutPropertyDouble)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyWString<P0, P1, P2>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginPutPropertyWString)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyWString<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndPutPropertyWString)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginPutPropertyGuid<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        data: *const ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginPutPropertyGuid)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            data,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutPropertyGuid<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndPutPropertyGuid)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteProperty<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteProperty)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteProperty<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteProperty)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPropertyMetadata<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPropertyMetadata)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPropertyMetadata<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyMetadataResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPropertyMetadata)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProperty<P0, P1>(
        &self,
        name: *const u16,
        propertyname: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetProperty)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProperty<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyValueResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetProperty)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginSubmitPropertyBatch<P0>(
        &self,
        name: *const u16,
        operations: &[super::super::FABRIC_PROPERTY_BATCH_OPERATION],
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginSubmitPropertyBatch)(
            ::windows_core::Interface::as_raw(self),
            name,
            operations.len().try_into().unwrap(),
            ::core::mem::transmute(operations.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSubmitPropertyBatch<P0>(
        &self,
        context: P0,
        failedoperationindexinrequest: *mut u32,
    ) -> ::windows_core::Result<IFabricPropertyBatchResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndSubmitPropertyBatch)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            failedoperationindexinrequest,
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginEnumerateProperties<P0, P1, P2>(
        &self,
        name: *const u16,
        includevalues: P0,
        previousresult: P1,
        timeoutmilliseconds: u32,
        callback: P2,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<IFabricPropertyEnumerationResult>,
        P2: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginEnumerateProperties)(
            ::windows_core::Interface::as_raw(self),
            name,
            includevalues.into_param().abi(),
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndEnumerateProperties<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPropertyEnumerationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndEnumerateProperties)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginPutCustomPropertyOperation<P0>(
        &self,
        name: *const u16,
        propertyoperation: *const super::super::FABRIC_PUT_CUSTOM_PROPERTY_OPERATION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginPutCustomPropertyOperation)(
            ::windows_core::Interface::as_raw(self),
            name,
            propertyoperation,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndPutCustomPropertyOperation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndPutCustomPropertyOperation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricPropertyManagementClient2 {}
#[repr(C)]
pub struct IFabricPropertyManagementClient2_Vtbl {
    pub base__: IFabricPropertyManagementClient_Vtbl,
    pub BeginPutCustomPropertyOperation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const super::super::FABRIC_PUT_CUSTOM_PROPERTY_OPERATION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndPutCustomPropertyOperation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricPropertyMetadataResult,
    IFabricPropertyMetadataResult_Vtbl,
    0x33302306_fb8d_4831_b493_57efcc772462
);
::windows_core::imp::interface_hierarchy!(IFabricPropertyMetadataResult, ::windows_core::IUnknown);
impl IFabricPropertyMetadataResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_Metadata(&self) -> *mut super::super::FABRIC_NAMED_PROPERTY_METADATA {
        (::windows_core::Interface::vtable(self).get_Metadata)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyMetadataResult {}
unsafe impl ::core::marker::Sync for IFabricPropertyMetadataResult {}
#[repr(C)]
pub struct IFabricPropertyMetadataResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_Metadata:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_NAMED_PROPERTY_METADATA,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_Metadata: usize,
}
::windows_core::imp::com_interface!(
    IFabricPropertyValueResult,
    IFabricPropertyValueResult_Vtbl,
    0x9a518b49_9903_4b8f_834e_1979e9c6745e
);
::windows_core::imp::interface_hierarchy!(IFabricPropertyValueResult, ::windows_core::IUnknown);
impl IFabricPropertyValueResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_Property(&self) -> *mut super::super::FABRIC_NAMED_PROPERTY {
        (::windows_core::Interface::vtable(self).get_Property)(::windows_core::Interface::as_raw(
            self,
        ))
    }
    pub unsafe fn GetValueAsBinary(&self, bytecount: *mut u32) -> ::windows_core::Result<*mut u8> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetValueAsBinary)(
            ::windows_core::Interface::as_raw(self),
            bytecount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetValueAsInt64(&self) -> ::windows_core::Result<i64> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetValueAsInt64)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetValueAsDouble(&self) -> ::windows_core::Result<f64> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetValueAsDouble)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetValueAsWString(&self) -> ::windows_core::Result<::windows_core::PCWSTR> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetValueAsWString)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetValueAsGuid(&self) -> ::windows_core::Result<::windows_core::GUID> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetValueAsGuid)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricPropertyValueResult {}
unsafe impl ::core::marker::Sync for IFabricPropertyValueResult {}
#[repr(C)]
pub struct IFabricPropertyValueResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_Property: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_NAMED_PROPERTY,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_Property: usize,
    pub GetValueAsBinary: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut u8,
    ) -> ::windows_core::HRESULT,
    pub GetValueAsInt64:
        unsafe extern "system" fn(*mut ::core::ffi::c_void, *mut i64) -> ::windows_core::HRESULT,
    pub GetValueAsDouble:
        unsafe extern "system" fn(*mut ::core::ffi::c_void, *mut f64) -> ::windows_core::HRESULT,
    pub GetValueAsWString: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::windows_core::PCWSTR,
    ) -> ::windows_core::HRESULT,
    pub GetValueAsGuid: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::windows_core::GUID,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient,
    IFabricQueryClient_Vtbl,
    0xc629e422_90ba_4efd_8f64_cecf51bc3df0
);
::windows_core::imp::interface_hierarchy!(IFabricQueryClient, ::windows_core::IUnknown);
impl IFabricQueryClient {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient {}
unsafe impl ::core::marker::Sync for IFabricQueryClient {}
#[repr(C)]
pub struct IFabricQueryClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginGetNodeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNodeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetApplicationTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetServiceTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetServiceList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPartitionList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetPartitionList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetReplicaList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetReplicaList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedApplicationList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedServicePackageList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetDeployedServicePackageList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedServiceTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedServiceTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedCodePackageList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedCodePackageList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetDeployedReplicaList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedReplicaList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient10,
    IFabricQueryClient10_Vtbl,
    0x02139da8_7140_42ae_8403_79a551600e63
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient10,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4,
    IFabricQueryClient5,
    IFabricQueryClient6,
    IFabricQueryClient7,
    IFabricQueryClient8,
    IFabricQueryClient9
);
impl IFabricQueryClient10 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationLoadInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationTypePagedList<P0>(
        &self,
        querydescription: *const super::super::PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationTypePagedList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypePagedList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypePagedListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationTypePagedList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetDeployedApplicationPagedList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PAGED_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedApplicationPagedList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationPagedList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationPagedListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedApplicationPagedList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient10 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient10 {}
#[repr(C)]
pub struct IFabricQueryClient10_Vtbl {
    pub base__: IFabricQueryClient9_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetDeployedApplicationPagedList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_PAGED_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetDeployedApplicationPagedList: usize,
    pub EndGetDeployedApplicationPagedList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient2,
    IFabricQueryClient2_Vtbl,
    0x4e6d5d61_24c8_4240_a2e8_bcb1fc15d9af
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient2,
    ::windows_core::IUnknown,
    IFabricQueryClient
);
impl IFabricQueryClient2 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient2 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient2 {}
#[repr(C)]
pub struct IFabricQueryClient2_Vtbl {
    pub base__: IFabricQueryClient_Vtbl,
    pub BeginGetDeployedReplicaDetail: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetDeployedReplicaDetail: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetClusterLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetClusterLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPartitionLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetPartitionLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetProvisionedFabricCodeVersionList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndGetProvisionedFabricCodeVersionList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub BeginGetProvisionedFabricConfigVersionList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndGetProvisionedFabricConfigVersionList:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient3,
    IFabricQueryClient3_Vtbl,
    0x16f563f3_4017_496e_b0e7_2650de5774b3
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient3,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2
);
impl IFabricQueryClient3 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient3 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient3 {}
#[repr(C)]
pub struct IFabricQueryClient3_Vtbl {
    pub base__: IFabricQueryClient2_Vtbl,
    pub BeginGetNodeLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNodeLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetReplicaLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetReplicaLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient4,
    IFabricQueryClient4_Vtbl,
    0xab92081d_0d78_410b_9777_0846dba24c10
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient4,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3
);
impl IFabricQueryClient4 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient4 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient4 {}
#[repr(C)]
pub struct IFabricQueryClient4_Vtbl {
    pub base__: IFabricQueryClient3_Vtbl,
    pub BeginGetServiceGroupMemberList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceGroupMemberList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetServiceGroupMemberTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetServiceGroupMemberTypeList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient5,
    IFabricQueryClient5_Vtbl,
    0x75c35e8c_87a2_4810_a401_b50da858fe34
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient5,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4
);
impl IFabricQueryClient5 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient5 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient5 {}
#[repr(C)]
pub struct IFabricQueryClient5_Vtbl {
    pub base__: IFabricQueryClient4_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetUnplacedReplicaInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetUnplacedReplicaInformation: usize,
    pub EndGetUnplacedReplicaInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient6,
    IFabricQueryClient6_Vtbl,
    0x173b2bb4_09c6_42fb_8754_caa8d43cf1b2
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient6,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4,
    IFabricQueryClient5
);
impl IFabricQueryClient6 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetReplicaList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient6 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient6 {}
#[repr(C)]
pub struct IFabricQueryClient6_Vtbl {
    pub base__: IFabricQueryClient5_Vtbl,
    pub EndGetNodeList2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationList2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceList2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetPartitionList2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetReplicaList2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient7,
    IFabricQueryClient7_Vtbl,
    0x538baa81_ba97_46da_95ac_e1cdd184cc74
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient7,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4,
    IFabricQueryClient5,
    IFabricQueryClient6
);
impl IFabricQueryClient7 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetReplicaList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationLoadInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient7 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient7 {}
#[repr(C)]
pub struct IFabricQueryClient7_Vtbl {
    pub base__: IFabricQueryClient6_Vtbl,
    pub BeginGetApplicationLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetApplicationLoadInformation: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient8,
    IFabricQueryClient8_Vtbl,
    0x2c850629_6a83_4fc3_8468_c868b87e9a17
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient8,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4,
    IFabricQueryClient5,
    IFabricQueryClient6,
    IFabricQueryClient7
);
impl IFabricQueryClient8 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetNodeList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetReplicaList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationLoadInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient8 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient8 {}
#[repr(C)]
pub struct IFabricQueryClient8_Vtbl {
    pub base__: IFabricQueryClient7_Vtbl,
    pub BeginGetServiceName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_NAME_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetApplicationName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetApplicationName: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricQueryClient9,
    IFabricQueryClient9_Vtbl,
    0x76f0b4a5_4941_49d7_993c_ad7afc37c6af
);
::windows_core::imp::interface_hierarchy!(
    IFabricQueryClient9,
    ::windows_core::IUnknown,
    IFabricQueryClient,
    IFabricQueryClient2,
    IFabricQueryClient3,
    IFabricQueryClient4,
    IFabricQueryClient5,
    IFabricQueryClient6,
    IFabricQueryClient7,
    IFabricQueryClient8
);
impl IFabricQueryClient9 {
    pub unsafe fn BeginGetNodeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedApplicationList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedApplicationList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedApplicationListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedApplicationList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServicePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServicePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServicePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServicePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedServiceTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedServiceTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedServiceTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedCodePackageList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedCodePackageList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedCodePackageListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedCodePackageList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedReplicaListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetDeployedReplicaDetail<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetDeployedReplicaDetail<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetDeployedServiceReplicaDetailResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetDeployedReplicaDetail)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetClusterLoadInformation<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetClusterLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetClusterLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetClusterLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetPartitionLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetPartitionLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricCodeVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricCodeVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedCodeVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricCodeVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetProvisionedFabricConfigVersionList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetProvisionedFabricConfigVersionList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetProvisionedConfigVersionListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetProvisionedFabricConfigVersionList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetNodeLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetNodeLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetReplicaLoadInformation<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetReplicaLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceGroupMemberTypeList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupMemberTypeList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceGroupMemberTypeListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceGroupMemberTypeList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetUnplacedReplicaInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetUnplacedReplicaInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetUnplacedReplicaInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetUnplacedReplicaInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetNodeListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetNodeList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetApplicationList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetPartitionListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetReplicaList2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetReplicaListResult2>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetReplicaList2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationLoadInformation<P0>(
        &self,
        querydescription : *const super::super:: FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationLoadInformation<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationLoadInformationResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetApplicationLoadInformation)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_SERVICE_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetServiceNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetApplicationName<P0>(
        &self,
        querydescription: *const super::super::FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationName<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationNameResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetApplicationName)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetApplicationTypePagedList<P0>(
        &self,
        querydescription: *const super::super::PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetApplicationTypePagedList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetApplicationTypePagedList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetApplicationTypePagedListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetApplicationTypePagedList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricQueryClient9 {}
unsafe impl ::core::marker::Sync for IFabricQueryClient9 {}
#[repr(C)]
pub struct IFabricQueryClient9_Vtbl {
    pub base__: IFabricQueryClient8_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetApplicationTypePagedList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetApplicationTypePagedList: usize,
    pub EndGetApplicationTypePagedList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricRepairManagementClient,
    IFabricRepairManagementClient_Vtbl,
    0xee483ba5_9018_4c99_9804_be6185db88e6
);
::windows_core::imp::interface_hierarchy!(IFabricRepairManagementClient, ::windows_core::IUnknown);
impl IFabricRepairManagementClient {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCreateRepairTask<P0>(
        &self,
        repairtask: *const super::super::FABRIC_REPAIR_TASK,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateRepairTask)(
            ::windows_core::Interface::as_raw(self),
            repairtask,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndCreateRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_CANCEL_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCancelRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndCancelRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginForceApproveRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_APPROVE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginForceApproveRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndForceApproveRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndForceApproveRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginDeleteRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_DELETE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateRepairExecutionState<P0>(
        &self,
        repairtask: *const super::super::FABRIC_REPAIR_TASK,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateRepairExecutionState)(
            ::windows_core::Interface::as_raw(self),
            repairtask,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateRepairExecutionState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndUpdateRepairExecutionState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginGetRepairTaskList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPAIR_TASK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetRepairTaskList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetRepairTaskList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetRepairTaskListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetRepairTaskList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricRepairManagementClient {}
unsafe impl ::core::marker::Sync for IFabricRepairManagementClient {}
#[repr(C)]
pub struct IFabricRepairManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginCreateRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_TASK,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginCreateRepairTask: usize,
    pub EndCreateRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginCancelRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_CANCEL_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginCancelRepairTask: usize,
    pub EndCancelRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    ) -> ::windows_core::HRESULT,
    pub BeginForceApproveRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_APPROVE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndForceApproveRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_DELETE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteRepairTask: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginUpdateRepairExecutionState: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_TASK,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginUpdateRepairExecutionState: usize,
    pub EndUpdateRepairExecutionState: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    ) -> ::windows_core::HRESULT,
    pub BeginGetRepairTaskList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_TASK_QUERY_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetRepairTaskList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricRepairManagementClient2,
    IFabricRepairManagementClient2_Vtbl,
    0x5067d775_3baa_48e4_8c72_bb5573cc3fb8
);
::windows_core::imp::interface_hierarchy!(
    IFabricRepairManagementClient2,
    ::windows_core::IUnknown,
    IFabricRepairManagementClient
);
impl IFabricRepairManagementClient2 {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCreateRepairTask<P0>(
        &self,
        repairtask: *const super::super::FABRIC_REPAIR_TASK,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateRepairTask)(
            ::windows_core::Interface::as_raw(self),
            repairtask,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_CANCEL_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCancelRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCancelRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginForceApproveRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_APPROVE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginForceApproveRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndForceApproveRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndForceApproveRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginDeleteRepairTask<P0>(
        &self,
        requestdescription: *const super::super::FABRIC_REPAIR_DELETE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteRepairTask)(
            ::windows_core::Interface::as_raw(self),
            requestdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteRepairTask<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteRepairTask)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateRepairExecutionState<P0>(
        &self,
        repairtask: *const super::super::FABRIC_REPAIR_TASK,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateRepairExecutionState)(
            ::windows_core::Interface::as_raw(self),
            repairtask,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateRepairExecutionState<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateRepairExecutionState)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginGetRepairTaskList<P0>(
        &self,
        querydescription: *const super::super::FABRIC_REPAIR_TASK_QUERY_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetRepairTaskList)(
            ::windows_core::Interface::as_raw(self),
            querydescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetRepairTaskList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricGetRepairTaskListResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetRepairTaskList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginUpdateRepairTaskHealthPolicy<P0>(
        &self,
        updatedescription: *const super::super::FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateRepairTaskHealthPolicy)(
            ::windows_core::Interface::as_raw(self),
            updatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateRepairTaskHealthPolicy<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndUpdateRepairTaskHealthPolicy)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricRepairManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricRepairManagementClient2 {}
#[repr(C)]
pub struct IFabricRepairManagementClient2_Vtbl {
    pub base__: IFabricRepairManagementClient_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginUpdateRepairTaskHealthPolicy: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginUpdateRepairTaskHealthPolicy: usize,
    pub EndUpdateRepairTaskHealthPolicy: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricReplicaHealthResult,
    IFabricReplicaHealthResult_Vtbl,
    0xb4d5f2d9_e5cc_49ae_a6c8_89e8df7b6c15
);
::windows_core::imp::interface_hierarchy!(IFabricReplicaHealthResult, ::windows_core::IUnknown);
impl IFabricReplicaHealthResult {
    pub unsafe fn get_ReplicaHealth(&self) -> *mut super::super::FABRIC_REPLICA_HEALTH {
        (::windows_core::Interface::vtable(self).get_ReplicaHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricReplicaHealthResult {}
unsafe impl ::core::marker::Sync for IFabricReplicaHealthResult {}
#[repr(C)]
pub struct IFabricReplicaHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_ReplicaHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_REPLICA_HEALTH,
}
::windows_core::imp::com_interface!(
    IFabricResolvedServicePartitionResult,
    IFabricResolvedServicePartitionResult_Vtbl,
    0xfd0fe113_cdf8_4803_b4a0_32b1b3ef3716
);
::windows_core::imp::interface_hierarchy!(
    IFabricResolvedServicePartitionResult,
    ::windows_core::IUnknown
);
impl IFabricResolvedServicePartitionResult {
    pub unsafe fn get_Partition(&self) -> *mut super::super::FABRIC_RESOLVED_SERVICE_PARTITION {
        (::windows_core::Interface::vtable(self).get_Partition)(::windows_core::Interface::as_raw(
            self,
        ))
    }
    pub unsafe fn GetEndpoint(
        &self,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_RESOLVED_SERVICE_ENDPOINT> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetEndpoint)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn CompareVersion<P0>(&self, other: P0) -> ::windows_core::Result<i32>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).CompareVersion)(
            ::windows_core::Interface::as_raw(self),
            other.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricResolvedServicePartitionResult {}
unsafe impl ::core::marker::Sync for IFabricResolvedServicePartitionResult {}
#[repr(C)]
pub struct IFabricResolvedServicePartitionResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Partition:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_RESOLVED_SERVICE_PARTITION,
    pub GetEndpoint: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut *mut super::super::FABRIC_RESOLVED_SERVICE_ENDPOINT,
    ) -> ::windows_core::HRESULT,
    pub CompareVersion: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i32,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricRestartDeployedCodePackageResult,
    IFabricRestartDeployedCodePackageResult_Vtbl,
    0xfe087dc4_7a6a_41e3_90e9_b734a4cef41f
);
::windows_core::imp::interface_hierarchy!(
    IFabricRestartDeployedCodePackageResult,
    ::windows_core::IUnknown
);
impl IFabricRestartDeployedCodePackageResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_DEPLOYED_CODE_PACKAGE_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricRestartDeployedCodePackageResult {}
unsafe impl ::core::marker::Sync for IFabricRestartDeployedCodePackageResult {}
#[repr(C)]
pub struct IFabricRestartDeployedCodePackageResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_DEPLOYED_CODE_PACKAGE_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricRestartNodeResult,
    IFabricRestartNodeResult_Vtbl,
    0x2f7e9d57_fe07_4e34_93e1_01d5a6298ca9
);
::windows_core::imp::interface_hierarchy!(IFabricRestartNodeResult, ::windows_core::IUnknown);
impl IFabricRestartNodeResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_NODE_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricRestartNodeResult {}
unsafe impl ::core::marker::Sync for IFabricRestartNodeResult {}
#[repr(C)]
pub struct IFabricRestartNodeResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_NODE_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricSecretReferencesResult,
    IFabricSecretReferencesResult_Vtbl,
    0xbb8f69de_f667_4fab_820d_274cf4303ab4
);
::windows_core::imp::interface_hierarchy!(IFabricSecretReferencesResult, ::windows_core::IUnknown);
impl IFabricSecretReferencesResult {
    pub unsafe fn get_SecretReferences(&self) -> *mut super::super::FABRIC_SECRET_REFERENCE_LIST {
        (::windows_core::Interface::vtable(self).get_SecretReferences)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricSecretReferencesResult {}
unsafe impl ::core::marker::Sync for IFabricSecretReferencesResult {}
#[repr(C)]
pub struct IFabricSecretReferencesResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_SecretReferences:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_SECRET_REFERENCE_LIST,
}
::windows_core::imp::com_interface!(
    IFabricSecretStoreClient,
    IFabricSecretStoreClient_Vtbl,
    0x38c4c723_3815_49d8_bdf2_68bfb536b8c9
);
::windows_core::imp::interface_hierarchy!(IFabricSecretStoreClient, ::windows_core::IUnknown);
impl IFabricSecretStoreClient {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetSecrets<P0, P1>(
        &self,
        secretreferences: *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        includevalue: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows::Win32::Foundation::BOOLEAN>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetSecrets)(
            ::windows_core::Interface::as_raw(self),
            secretreferences,
            includevalue.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetSecrets<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricSecretsResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetSecrets)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginSetSecrets<P0>(
        &self,
        secrets: *const super::super::FABRIC_SECRET_LIST,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginSetSecrets)(
            ::windows_core::Interface::as_raw(self),
            secrets,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSetSecrets<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricSecretsResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndSetSecrets)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginRemoveSecrets<P0>(
        &self,
        secretreferences: *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRemoveSecrets)(
            ::windows_core::Interface::as_raw(self),
            secretreferences,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRemoveSecrets<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricSecretReferencesResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndRemoveSecrets)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetSecretVersions<P0>(
        &self,
        secretreferences: *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetSecretVersions)(
            ::windows_core::Interface::as_raw(self),
            secretreferences,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetSecretVersions<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricSecretReferencesResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetSecretVersions)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricSecretStoreClient {}
unsafe impl ::core::marker::Sync for IFabricSecretStoreClient {}
#[repr(C)]
pub struct IFabricSecretStoreClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        ::windows::Win32::Foundation::BOOLEAN,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetSecrets: usize,
    pub EndGetSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginSetSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SECRET_LIST,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndSetSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRemoveSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRemoveSecrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetSecretVersions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SECRET_REFERENCE_LIST,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetSecretVersions: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricSecretsResult,
    IFabricSecretsResult_Vtbl,
    0xfe15a879_0dbe_4841_9cc6_6e92077cd669
);
::windows_core::imp::interface_hierarchy!(IFabricSecretsResult, ::windows_core::IUnknown);
impl IFabricSecretsResult {
    pub unsafe fn get_Secrets(&self) -> *mut super::super::FABRIC_SECRET_LIST {
        (::windows_core::Interface::vtable(self).get_Secrets)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricSecretsResult {}
unsafe impl ::core::marker::Sync for IFabricSecretsResult {}
#[repr(C)]
pub struct IFabricSecretsResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Secrets: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_SECRET_LIST,
}
::windows_core::imp::com_interface!(
    IFabricServiceDescriptionResult,
    IFabricServiceDescriptionResult_Vtbl,
    0x86b4f744_38c7_4dab_b6b4_11c23734c269
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceDescriptionResult,
    ::windows_core::IUnknown
);
impl IFabricServiceDescriptionResult {
    pub unsafe fn get_Description(&self) -> *mut super::super::FABRIC_SERVICE_DESCRIPTION {
        (::windows_core::Interface::vtable(self).get_Description)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricServiceDescriptionResult {}
unsafe impl ::core::marker::Sync for IFabricServiceDescriptionResult {}
#[repr(C)]
pub struct IFabricServiceDescriptionResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Description: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_SERVICE_DESCRIPTION,
}
::windows_core::imp::com_interface!(
    IFabricServiceEndpointsVersion,
    IFabricServiceEndpointsVersion_Vtbl,
    0x0a673dc5_2297_4fc5_a38f_482d29144fa5
);
::windows_core::imp::interface_hierarchy!(IFabricServiceEndpointsVersion, ::windows_core::IUnknown);
impl IFabricServiceEndpointsVersion {
    pub unsafe fn Compare<P0>(&self, other: P0) -> ::windows_core::Result<i32>
    where
        P0: ::windows_core::IntoParam<IFabricServiceEndpointsVersion>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).Compare)(
            ::windows_core::Interface::as_raw(self),
            other.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricServiceEndpointsVersion {}
unsafe impl ::core::marker::Sync for IFabricServiceEndpointsVersion {}
#[repr(C)]
pub struct IFabricServiceEndpointsVersion_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub Compare: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i32,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceGroupDescriptionResult,
    IFabricServiceGroupDescriptionResult_Vtbl,
    0x3ca814d4_e067_48b7_9bdc_9be33810416d
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceGroupDescriptionResult,
    ::windows_core::IUnknown
);
impl IFabricServiceGroupDescriptionResult {
    pub unsafe fn get_Description(&self) -> *mut super::super::FABRIC_SERVICE_GROUP_DESCRIPTION {
        (::windows_core::Interface::vtable(self).get_Description)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricServiceGroupDescriptionResult {}
unsafe impl ::core::marker::Sync for IFabricServiceGroupDescriptionResult {}
#[repr(C)]
pub struct IFabricServiceGroupDescriptionResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Description:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
}
::windows_core::imp::com_interface!(
    IFabricServiceGroupManagementClient,
    IFabricServiceGroupManagementClient_Vtbl,
    0x2061227e_0281_4baf_9b19_b2dfb2e63bbe
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceGroupManagementClient,
    ::windows_core::IUnknown
);
impl IFabricServiceGroupManagementClient {
    pub unsafe fn BeginCreateServiceGroup<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteServiceGroup<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceGroupDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceGroupDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricServiceGroupManagementClient {}
unsafe impl ::core::marker::Sync for IFabricServiceGroupManagementClient {}
#[repr(C)]
pub struct IFabricServiceGroupManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginCreateServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetServiceGroupDescription: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceGroupDescription: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceGroupManagementClient2,
    IFabricServiceGroupManagementClient2_Vtbl,
    0x4f0dc42d_8fec_4ea9_a96b_5be1fa1e1d64
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceGroupManagementClient2,
    ::windows_core::IUnknown,
    IFabricServiceGroupManagementClient
);
impl IFabricServiceGroupManagementClient2 {
    pub unsafe fn BeginCreateServiceGroup<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteServiceGroup<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceGroupDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceGroupDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateServiceGroup<P0>(
        &self,
        name: *const u16,
        servicegroupupdatedescription: *const super::super::FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            servicegroupupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceGroupManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricServiceGroupManagementClient2 {}
#[repr(C)]
pub struct IFabricServiceGroupManagementClient2_Vtbl {
    pub base__: IFabricServiceGroupManagementClient_Vtbl,
    pub BeginUpdateServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const super::super::FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpdateServiceGroup: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceGroupManagementClient3,
    IFabricServiceGroupManagementClient3_Vtbl,
    0xcbee0e12_b5a0_44dc_8c3c_c067958f82f6
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceGroupManagementClient3,
    ::windows_core::IUnknown,
    IFabricServiceGroupManagementClient,
    IFabricServiceGroupManagementClient2
);
impl IFabricServiceGroupManagementClient3 {
    pub unsafe fn BeginCreateServiceGroup<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteServiceGroup<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceGroupDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceGroupDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateServiceGroup<P0>(
        &self,
        name: *const u16,
        servicegroupupdatedescription: *const super::super::FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            servicegroupupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceGroupFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateServiceGroupFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroupFromTemplate<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateServiceGroupFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceGroupManagementClient3 {}
unsafe impl ::core::marker::Sync for IFabricServiceGroupManagementClient3 {}
#[repr(C)]
pub struct IFabricServiceGroupManagementClient3_Vtbl {
    pub base__: IFabricServiceGroupManagementClient2_Vtbl,
    pub BeginCreateServiceGroupFromTemplate: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *const u8,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndCreateServiceGroupFromTemplate: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceGroupManagementClient4,
    IFabricServiceGroupManagementClient4_Vtbl,
    0x3c73b32e_9a08_48ca_b3a3_993a2029e37a
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceGroupManagementClient4,
    ::windows_core::IUnknown,
    IFabricServiceGroupManagementClient,
    IFabricServiceGroupManagementClient2,
    IFabricServiceGroupManagementClient3
);
impl IFabricServiceGroupManagementClient4 {
    pub unsafe fn BeginCreateServiceGroup<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_GROUP_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndCreateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteServiceGroup<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeleteServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceGroupDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceGroupDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceGroupDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceGroupDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateServiceGroup<P0>(
        &self,
        name: *const u16,
        servicegroupupdatedescription: *const super::super::FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            name,
            servicegroupupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateServiceGroup<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpdateServiceGroup)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceGroupFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateServiceGroupFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroupFromTemplate<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateServiceGroupFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceGroupFromTemplate2<P0>(
        &self,
        servicegroupfromtemplatedescription : *const super::super:: FABRIC_SERVICE_GROUP_FROM_TEMPLATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateServiceGroupFromTemplate2)(
            ::windows_core::Interface::as_raw(self),
            servicegroupfromtemplatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceGroupFromTemplate2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateServiceGroupFromTemplate2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceGroupManagementClient4 {}
unsafe impl ::core::marker::Sync for IFabricServiceGroupManagementClient4 {}
#[repr(C)]
pub struct IFabricServiceGroupManagementClient4_Vtbl {
    pub base__: IFabricServiceGroupManagementClient3_Vtbl,
    pub BeginCreateServiceGroupFromTemplate2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_GROUP_FROM_TEMPLATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndCreateServiceGroupFromTemplate2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceHealthResult,
    IFabricServiceHealthResult_Vtbl,
    0x52040bd9_a78e_4308_a30e_7114e3684e76
);
::windows_core::imp::interface_hierarchy!(IFabricServiceHealthResult, ::windows_core::IUnknown);
impl IFabricServiceHealthResult {
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn get_ServiceHealth(&self) -> *mut super::super::FABRIC_SERVICE_HEALTH {
        (::windows_core::Interface::vtable(self).get_ServiceHealth)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricServiceHealthResult {}
unsafe impl ::core::marker::Sync for IFabricServiceHealthResult {}
#[repr(C)]
pub struct IFabricServiceHealthResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub get_ServiceHealth: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::FABRIC_SERVICE_HEALTH,
    #[cfg(not(feature = "Win32_Foundation"))]
    get_ServiceHealth: usize,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient,
    IFabricServiceManagementClient_Vtbl,
    0xf7368189_fd1f_437c_888d_8c89cecc57a0
);
::windows_core::imp::interface_hierarchy!(IFabricServiceManagementClient, ::windows_core::IUnknown);
impl IFabricServiceManagementClient {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self).UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient {}
#[repr(C)]
pub struct IFabricServiceManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginCreateService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginCreateServiceFromTemplate: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const u16,
        ::windows_core::PCWSTR,
        u32,
        *const u8,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateServiceFromTemplate: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginDeleteService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndDeleteService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetServiceDescription: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceDescription: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub RegisterServicePartitionResolutionChangeHandler:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const u16,
            super::super::FABRIC_PARTITION_KEY_TYPE,
            *const ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
            *mut i64,
        ) -> ::windows_core::HRESULT,
    pub UnregisterServicePartitionResolutionChangeHandler:
        unsafe extern "system" fn(*mut ::core::ffi::c_void, i64) -> ::windows_core::HRESULT,
    pub BeginResolveServicePartition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        super::super::FABRIC_PARTITION_KEY_TYPE,
        *const ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndResolveServicePartition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient2,
    IFabricServiceManagementClient2_Vtbl,
    0x9933ed08_5d0c_4aed_bab6_f676bf5be8aa
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceManagementClient2,
    ::windows_core::IUnknown,
    IFabricServiceManagementClient
);
impl IFabricServiceManagementClient2 {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceManifest<P0, P1, P2, P3>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        timeoutmilliseconds: u32,
        callback: P3,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateService<P0>(
        &self,
        name: *const u16,
        serviceupdatedescription: *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUpdateService)(
            ::windows_core::Interface::as_raw(self),
            name,
            serviceupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUpdateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient2 {}
#[repr(C)]
pub struct IFabricServiceManagementClient2_Vtbl {
    pub base__: IFabricServiceManagementClient_Vtbl,
    pub BeginGetServiceManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        ::windows_core::PCWSTR,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetServiceManifest: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginUpdateService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const u16,
        *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndUpdateService: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient3,
    IFabricServiceManagementClient3_Vtbl,
    0x98ec1156_c249_4f66_8d7c_9a5fa88e8e6d
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceManagementClient3,
    ::windows_core::IUnknown,
    IFabricServiceManagementClient,
    IFabricServiceManagementClient2
);
impl IFabricServiceManagementClient3 {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceManifest<P0, P1, P2, P3>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        timeoutmilliseconds: u32,
        callback: P3,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateService<P0>(
        &self,
        name: *const u16,
        serviceupdatedescription: *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUpdateService)(
            ::windows_core::Interface::as_raw(self),
            name,
            serviceupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUpdateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRemoveReplica<P0>(
        &self,
        description: *const super::super::FABRIC_REMOVE_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRemoveReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartReplica<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient3 {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient3 {}
#[repr(C)]
pub struct IFabricServiceManagementClient3_Vtbl {
    pub base__: IFabricServiceManagementClient2_Vtbl,
    pub BeginRemoveReplica: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_REMOVE_REPLICA_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRemoveReplica: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginRestartReplica: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_RESTART_REPLICA_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndRestartReplica: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient4,
    IFabricServiceManagementClient4_Vtbl,
    0x8180db27_7d0b_43b0_82e0_4a8e022fc238
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceManagementClient4,
    ::windows_core::IUnknown,
    IFabricServiceManagementClient,
    IFabricServiceManagementClient2,
    IFabricServiceManagementClient3
);
impl IFabricServiceManagementClient4 {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceManifest<P0, P1, P2, P3>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        timeoutmilliseconds: u32,
        callback: P3,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateService<P0>(
        &self,
        name: *const u16,
        serviceupdatedescription: *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUpdateService)(
            ::windows_core::Interface::as_raw(self),
            name,
            serviceupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUpdateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRemoveReplica<P0>(
        &self,
        description: *const super::super::FABRIC_REMOVE_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRemoveReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartReplica<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRegisterServiceNotificationFilter<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRegisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginUnregisterServiceNotificationFilter<P0>(
        &self,
        filterid: i64,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            filterid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnregisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient4 {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient4 {}
#[repr(C)]
pub struct IFabricServiceManagementClient4_Vtbl {
    pub base__: IFabricServiceManagementClient3_Vtbl,
    pub BeginRegisterServiceNotificationFilter:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *const super::super::FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndRegisterServiceNotificationFilter: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut i64,
    )
        -> ::windows_core::HRESULT,
    pub BeginUnregisterServiceNotificationFilter:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            i64,
            u32,
            *mut ::core::ffi::c_void,
            *mut *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
    pub EndUnregisterServiceNotificationFilter:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
            *mut ::core::ffi::c_void,
        ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient5,
    IFabricServiceManagementClient5_Vtbl,
    0xf9a70679_8ca3_4e27_9411_483e0c89b1fa
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceManagementClient5,
    ::windows_core::IUnknown,
    IFabricServiceManagementClient,
    IFabricServiceManagementClient2,
    IFabricServiceManagementClient3,
    IFabricServiceManagementClient4
);
impl IFabricServiceManagementClient5 {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceManifest<P0, P1, P2, P3>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        timeoutmilliseconds: u32,
        callback: P3,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateService<P0>(
        &self,
        name: *const u16,
        serviceupdatedescription: *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginUpdateService)(
            ::windows_core::Interface::as_raw(self),
            name,
            serviceupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndUpdateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRemoveReplica<P0>(
        &self,
        description: *const super::super::FABRIC_REMOVE_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRemoveReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartReplica<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRegisterServiceNotificationFilter<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRegisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginUnregisterServiceNotificationFilter<P0>(
        &self,
        filterid: i64,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            filterid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnregisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteService2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginDeleteService2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndDeleteService2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient5 {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient5 {}
#[repr(C)]
pub struct IFabricServiceManagementClient5_Vtbl {
    pub base__: IFabricServiceManagementClient4_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginDeleteService2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_DELETE_SERVICE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginDeleteService2: usize,
    pub EndDeleteService2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceManagementClient6,
    IFabricServiceManagementClient6_Vtbl,
    0x23e4ee1b_049a_48f5_8dd7_b601eace47de
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceManagementClient6,
    ::windows_core::IUnknown,
    IFabricServiceManagementClient,
    IFabricServiceManagementClient2,
    IFabricServiceManagementClient3,
    IFabricServiceManagementClient4,
    IFabricServiceManagementClient5
);
impl IFabricServiceManagementClient6 {
    pub unsafe fn BeginCreateService<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateService)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate<P0, P1>(
        &self,
        applicationname: *const u16,
        servicename: *const u16,
        servicetypename: P0,
        initializationdata: &[u8],
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            applicationname,
            servicename,
            servicetypename.into_param().abi(),
            initializationdata.len().try_into().unwrap(),
            ::core::mem::transmute(initializationdata.as_ptr()),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndCreateServiceFromTemplate)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginDeleteService<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginDeleteService)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndDeleteService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetServiceDescription<P0>(
        &self,
        name: *const u16,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            name,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceDescription<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricServiceDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceDescription)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn RegisterServicePartitionResolutionChangeHandler<P0>(
        &self,
        name: *const u16,
        keytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        callback: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<IFabricServicePartitionResolutionChangeHandler>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .RegisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            name,
            keytype,
            partitionkey,
            callback.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn UnregisterServicePartitionResolutionChangeHandler(
        &self,
        callbackhandle: i64,
    ) -> ::windows_core::Result<()> {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .UnregisterServicePartitionResolutionChangeHandler)(
            ::windows_core::Interface::as_raw(self),
            callbackhandle,
        )
        .ok()
    }
    pub unsafe fn BeginResolveServicePartition<P0, P1>(
        &self,
        name: *const u16,
        partitionkeytype: super::super::FABRIC_PARTITION_KEY_TYPE,
        partitionkey: *const ::core::ffi::c_void,
        previousresult: P0,
        timeoutmilliseconds: u32,
        callback: P1,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
        P1: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .BeginResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            name,
            partitionkeytype,
            partitionkey,
            previousresult.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndResolveServicePartition<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricResolvedServicePartitionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .base__
            .EndResolveServicePartition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetServiceManifest<P0, P1, P2, P3>(
        &self,
        applicationtypename: P0,
        applicationtypeversion: P1,
        servicemanifestname: P2,
        timeoutmilliseconds: u32,
        callback: P3,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P1: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P2: ::windows_core::IntoParam<::windows_core::PCWSTR>,
        P3: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            applicationtypename.into_param().abi(),
            applicationtypeversion.into_param().abi(),
            servicemanifestname.into_param().abi(),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetServiceManifest<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<super::IFabricStringResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndGetServiceManifest)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginUpdateService<P0>(
        &self,
        name: *const u16,
        serviceupdatedescription: *const super::super::FABRIC_SERVICE_UPDATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .BeginUpdateService)(
            ::windows_core::Interface::as_raw(self),
            name,
            serviceupdatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUpdateService<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .base__
            .EndUpdateService)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRemoveReplica<P0>(
        &self,
        description: *const super::super::FABRIC_REMOVE_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRemoveReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRemoveReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRestartReplica<P0>(
        &self,
        description: *const super::super::FABRIC_RESTART_REPLICA_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRestartReplica<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndRestartReplica)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginRegisterServiceNotificationFilter<P0>(
        &self,
        description: *const super::super::FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndRegisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<i64>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndRegisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn BeginUnregisterServiceNotificationFilter<P0>(
        &self,
        filterid: i64,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            filterid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndUnregisterServiceNotificationFilter<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndUnregisterServiceNotificationFilter)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginDeleteService2<P0>(
        &self,
        deletedescription: *const super::super::FABRIC_DELETE_SERVICE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginDeleteService2)(
            ::windows_core::Interface::as_raw(self),
            deletedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndDeleteService2<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndDeleteService2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginCreateServiceFromTemplate2<P0>(
        &self,
        servicefromtemplatedescription : *const super::super:: FABRIC_SERVICE_FROM_TEMPLATE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCreateServiceFromTemplate2)(
            ::windows_core::Interface::as_raw(self),
            servicefromtemplatedescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCreateServiceFromTemplate2<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCreateServiceFromTemplate2)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceManagementClient6 {}
unsafe impl ::core::marker::Sync for IFabricServiceManagementClient6 {}
#[repr(C)]
pub struct IFabricServiceManagementClient6_Vtbl {
    pub base__: IFabricServiceManagementClient5_Vtbl,
    pub BeginCreateServiceFromTemplate2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_SERVICE_FROM_TEMPLATE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndCreateServiceFromTemplate2: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceNotification,
    IFabricServiceNotification_Vtbl,
    0x8222c825_08ad_4639_afce_a8988cbd6db3
);
::windows_core::imp::interface_hierarchy!(IFabricServiceNotification, ::windows_core::IUnknown);
impl IFabricServiceNotification {
    pub unsafe fn get_Notification(&self) -> *mut super::super::FABRIC_SERVICE_NOTIFICATION {
        (::windows_core::Interface::vtable(self).get_Notification)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn GetVersion(&self) -> ::windows_core::Result<IFabricServiceEndpointsVersion> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetVersion)(
            ::windows_core::Interface::as_raw(self),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricServiceNotification {}
unsafe impl ::core::marker::Sync for IFabricServiceNotification {}
#[repr(C)]
pub struct IFabricServiceNotification_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Notification:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_SERVICE_NOTIFICATION,
    pub GetVersion: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServiceNotificationEventHandler,
    IFabricServiceNotificationEventHandler_Vtbl,
    0xa04b7e9a_daab_45d4_8da3_95ef3ab5dbac
);
::windows_core::imp::interface_hierarchy!(
    IFabricServiceNotificationEventHandler,
    ::windows_core::IUnknown
);
impl IFabricServiceNotificationEventHandler {
    pub unsafe fn OnNotification<P0>(
        &self,
        __midl__ifabricservicenotificationeventhandler0000: P0,
    ) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<IFabricServiceNotification>,
    {
        (::windows_core::Interface::vtable(self).OnNotification)(
            ::windows_core::Interface::as_raw(self),
            __midl__ifabricservicenotificationeventhandler0000
                .into_param()
                .abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricServiceNotificationEventHandler {}
unsafe impl ::core::marker::Sync for IFabricServiceNotificationEventHandler {}
#[repr(C)]
pub struct IFabricServiceNotificationEventHandler_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub OnNotification: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricServicePartitionResolutionChangeHandler,
    IFabricServicePartitionResolutionChangeHandler_Vtbl,
    0xf495715d_8e03_4232_b8d6_1227b39984fc
);
::windows_core::imp::interface_hierarchy!(
    IFabricServicePartitionResolutionChangeHandler,
    ::windows_core::IUnknown
);
impl IFabricServicePartitionResolutionChangeHandler {
    pub unsafe fn OnChange<P0, P1>(
        &self,
        source: P0,
        handlerid: i64,
        partition: P1,
        error: ::windows_core::HRESULT,
    ) where
        P0: ::windows_core::IntoParam<IFabricServiceManagementClient>,
        P1: ::windows_core::IntoParam<IFabricResolvedServicePartitionResult>,
    {
        (::windows_core::Interface::vtable(self).OnChange)(
            ::windows_core::Interface::as_raw(self),
            source.into_param().abi(),
            handlerid,
            partition.into_param().abi(),
            error,
        )
    }
}
unsafe impl ::core::marker::Send for IFabricServicePartitionResolutionChangeHandler {}
unsafe impl ::core::marker::Sync for IFabricServicePartitionResolutionChangeHandler {}
#[repr(C)]
pub struct IFabricServicePartitionResolutionChangeHandler_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub OnChange: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        i64,
        *mut ::core::ffi::c_void,
        ::windows_core::HRESULT,
    ),
}
::windows_core::imp::com_interface!(
    IFabricStartNodeResult,
    IFabricStartNodeResult_Vtbl,
    0x7e9f51a5_88ac_49b8_958d_329e3334802e
);
::windows_core::imp::interface_hierarchy!(IFabricStartNodeResult, ::windows_core::IUnknown);
impl IFabricStartNodeResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_NODE_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricStartNodeResult {}
unsafe impl ::core::marker::Sync for IFabricStartNodeResult {}
#[repr(C)]
pub struct IFabricStartNodeResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_NODE_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricStopNodeResult,
    IFabricStopNodeResult_Vtbl,
    0x711d60a6_9623_476c_970c_83059a0b4d55
);
::windows_core::imp::interface_hierarchy!(IFabricStopNodeResult, ::windows_core::IUnknown);
impl IFabricStopNodeResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::FABRIC_NODE_RESULT {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricStopNodeResult {}
unsafe impl ::core::marker::Sync for IFabricStopNodeResult {}
#[repr(C)]
pub struct IFabricStopNodeResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    ) -> *mut super::super::FABRIC_NODE_RESULT,
}
::windows_core::imp::com_interface!(
    IFabricTestCommandStatusResult,
    IFabricTestCommandStatusResult_Vtbl,
    0x87798f5c_e600_493a_a926_16b6807378e6
);
::windows_core::imp::interface_hierarchy!(IFabricTestCommandStatusResult, ::windows_core::IUnknown);
impl IFabricTestCommandStatusResult {
    pub unsafe fn get_Result(&self) -> *mut super::super::TEST_COMMAND_QUERY_RESULT_LIST {
        (::windows_core::Interface::vtable(self).get_Result)(::windows_core::Interface::as_raw(
            self,
        ))
    }
}
unsafe impl ::core::marker::Send for IFabricTestCommandStatusResult {}
unsafe impl ::core::marker::Sync for IFabricTestCommandStatusResult {}
#[repr(C)]
pub struct IFabricTestCommandStatusResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_Result: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
    )
        -> *mut super::super::TEST_COMMAND_QUERY_RESULT_LIST,
}
::windows_core::imp::com_interface!(
    IFabricTestManagementClient,
    IFabricTestManagementClient_Vtbl,
    0x0df0f63a_4da0_44fe_81e8_f80cd28e9b28
);
::windows_core::imp::interface_hierarchy!(IFabricTestManagementClient, ::windows_core::IUnknown);
impl IFabricTestManagementClient {
    pub unsafe fn BeginStartPartitionDataLoss<P0>(
        &self,
        invokedatalossdescription : *const super::super:: FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionDataLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionDataLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionDataLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionDataLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionQuorumLoss<P0>(
        &self,
        invokequorumlossdescription : *const super::super:: FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            invokequorumlossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionQuorumLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionQuorumLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionQuorumLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionQuorumLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionRestart<P0>(
        &self,
        restartpartitiondescription : *const super::super:: FABRIC_START_PARTITION_RESTART_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionRestart<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionRestartProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionRestartProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionRestartProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetTestCommandStatusList<P0>(
        &self,
        operationid: *const super::super::FABRIC_TEST_COMMAND_LIST_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            operationid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetTestCommandStatusList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricTestCommandStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelTestCommand<P0>(
        &self,
        invokedatalossdescription: *const super::super::FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelTestCommand<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
}
unsafe impl ::core::marker::Send for IFabricTestManagementClient {}
unsafe impl ::core::marker::Sync for IFabricTestManagementClient {}
#[repr(C)]
pub struct IFabricTestManagementClient_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub BeginStartPartitionDataLoss: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartPartitionDataLoss: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPartitionDataLossProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetPartitionDataLossProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStartPartitionQuorumLoss: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartPartitionQuorumLoss: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPartitionQuorumLossProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub EndGetPartitionQuorumLossProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    )
        -> ::windows_core::HRESULT,
    pub BeginStartPartitionRestart: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_PARTITION_RESTART_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartPartitionRestart: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetPartitionRestartProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetPartitionRestartProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetTestCommandStatusList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_TEST_COMMAND_LIST_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetTestCommandStatusList: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginCancelTestCommand: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginCancelTestCommand: usize,
    pub EndCancelTestCommand: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricTestManagementClient2,
    IFabricTestManagementClient2_Vtbl,
    0x1222b1ff_ae51_43b3_bbdf_439e7f61ca1a
);
::windows_core::imp::interface_hierarchy!(
    IFabricTestManagementClient2,
    ::windows_core::IUnknown,
    IFabricTestManagementClient
);
impl IFabricTestManagementClient2 {
    pub unsafe fn BeginStartPartitionDataLoss<P0>(
        &self,
        invokedatalossdescription : *const super::super:: FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionDataLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionDataLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionDataLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionDataLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionQuorumLoss<P0>(
        &self,
        invokequorumlossdescription : *const super::super:: FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            invokequorumlossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionQuorumLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionQuorumLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionQuorumLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionQuorumLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionRestart<P0>(
        &self,
        restartpartitiondescription : *const super::super:: FABRIC_START_PARTITION_RESTART_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionRestart<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionRestartProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionRestartProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionRestartProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetTestCommandStatusList<P0>(
        &self,
        operationid: *const super::super::FABRIC_TEST_COMMAND_LIST_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            operationid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetTestCommandStatusList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricTestCommandStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelTestCommand<P0>(
        &self,
        invokedatalossdescription: *const super::super::FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelTestCommand<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginStartChaos<P0>(
        &self,
        restartpartitiondescription: *const super::super::FABRIC_START_CHAOS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartChaos)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopChaos<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStopChaos)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStopChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetChaosReport<P0>(
        &self,
        getchaosreportdescription: *const super::super::FABRIC_GET_CHAOS_REPORT_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            getchaosreportdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaosReport<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosReportResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricTestManagementClient2 {}
unsafe impl ::core::marker::Sync for IFabricTestManagementClient2 {}
#[repr(C)]
pub struct IFabricTestManagementClient2_Vtbl {
    pub base__: IFabricTestManagementClient_Vtbl,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginStartChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_START_CHAOS_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginStartChaos: usize,
    pub EndStartChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginStopChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStopChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetChaosReport: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_GET_CHAOS_REPORT_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetChaosReport: usize,
    pub EndGetChaosReport: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricTestManagementClient3,
    IFabricTestManagementClient3_Vtbl,
    0xa4b94afd_0cb5_4010_8995_e58e9b6ca373
);
::windows_core::imp::interface_hierarchy!(
    IFabricTestManagementClient3,
    ::windows_core::IUnknown,
    IFabricTestManagementClient,
    IFabricTestManagementClient2
);
impl IFabricTestManagementClient3 {
    pub unsafe fn BeginStartPartitionDataLoss<P0>(
        &self,
        invokedatalossdescription : *const super::super:: FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionDataLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionDataLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionDataLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionDataLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionQuorumLoss<P0>(
        &self,
        invokequorumlossdescription : *const super::super:: FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            invokequorumlossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionQuorumLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionQuorumLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionQuorumLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionQuorumLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionRestart<P0>(
        &self,
        restartpartitiondescription : *const super::super:: FABRIC_START_PARTITION_RESTART_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionRestart<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionRestartProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionRestartProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionRestartProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetTestCommandStatusList<P0>(
        &self,
        operationid: *const super::super::FABRIC_TEST_COMMAND_LIST_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            operationid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetTestCommandStatusList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricTestCommandStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelTestCommand<P0>(
        &self,
        invokedatalossdescription: *const super::super::FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelTestCommand<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginStartChaos<P0>(
        &self,
        restartpartitiondescription: *const super::super::FABRIC_START_CHAOS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartChaos)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndStartChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopChaos<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStopChaos)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).base__.EndStopChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetChaosReport<P0>(
        &self,
        getchaosreportdescription: *const super::super::FABRIC_GET_CHAOS_REPORT_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            getchaosreportdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaosReport<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosReportResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartNodeTransition<P0>(
        &self,
        description: *const super::super::FABRIC_NODE_TRANSITION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginStartNodeTransition)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNodeTransition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndStartNodeTransition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetNodeTransitionProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetNodeTransitionProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeTransitionProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeTransitionProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetNodeTransitionProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricTestManagementClient3 {}
unsafe impl ::core::marker::Sync for IFabricTestManagementClient3 {}
#[repr(C)]
pub struct IFabricTestManagementClient3_Vtbl {
    pub base__: IFabricTestManagementClient2_Vtbl,
    pub BeginStartNodeTransition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_NODE_TRANSITION_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndStartNodeTransition: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetNodeTransitionProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        ::windows_core::GUID,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetNodeTransitionProgress: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricTestManagementClient4,
    IFabricTestManagementClient4_Vtbl,
    0xb96aa7d4_acc0_4814_89dc_561b0cbb6028
);
::windows_core::imp::interface_hierarchy!(
    IFabricTestManagementClient4,
    ::windows_core::IUnknown,
    IFabricTestManagementClient,
    IFabricTestManagementClient2,
    IFabricTestManagementClient3
);
impl IFabricTestManagementClient4 {
    pub unsafe fn BeginStartPartitionDataLoss<P0>(
        &self,
        invokedatalossdescription : *const super::super:: FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionDataLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStartPartitionDataLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionDataLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionDataLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionDataLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionDataLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionQuorumLoss<P0>(
        &self,
        invokequorumlossdescription : *const super::super:: FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            invokequorumlossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionQuorumLoss<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStartPartitionQuorumLoss)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionQuorumLossProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionQuorumLossProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionQuorumLossProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionQuorumLossProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartPartitionRestart<P0>(
        &self,
        restartpartitiondescription : *const super::super:: FABRIC_START_PARTITION_RESTART_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartPartitionRestart<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndStartPartitionRestart)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetPartitionRestartProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetPartitionRestartProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricPartitionRestartProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetPartitionRestartProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetTestCommandStatusList<P0>(
        &self,
        operationid: *const super::super::FABRIC_TEST_COMMAND_LIST_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            operationid,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetTestCommandStatusList<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricTestCommandStatusResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndGetTestCommandStatusList)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginCancelTestCommand<P0>(
        &self,
        invokedatalossdescription: *const super::super::FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .BeginCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            invokedatalossdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndCancelTestCommand<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .base__
            .EndCancelTestCommand)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginStartChaos<P0>(
        &self,
        restartpartitiondescription: *const super::super::FABRIC_START_CHAOS_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStartChaos)(
            ::windows_core::Interface::as_raw(self),
            restartpartitiondescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStartChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginStopChaos<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginStopChaos)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStopChaos<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndStopChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetChaosReport<P0>(
        &self,
        getchaosreportdescription: *const super::super::FABRIC_GET_CHAOS_REPORT_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .BeginGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            getchaosreportdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaosReport<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosReportResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .EndGetChaosReport)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginStartNodeTransition<P0>(
        &self,
        description: *const super::super::FABRIC_NODE_TRANSITION_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginStartNodeTransition)(
            ::windows_core::Interface::as_raw(self),
            description,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndStartNodeTransition<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self)
            .base__
            .EndStartNodeTransition)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    pub unsafe fn BeginGetNodeTransitionProgress<P0>(
        &self,
        operationid: ::windows_core::GUID,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .BeginGetNodeTransitionProgress)(
            ::windows_core::Interface::as_raw(self),
            ::core::mem::transmute(operationid),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetNodeTransitionProgress<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricNodeTransitionProgressResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .EndGetNodeTransitionProgress)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetChaos<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetChaos)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaos<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetChaos)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn BeginGetChaosSchedule<P0>(
        &self,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetChaosSchedule)(
            ::windows_core::Interface::as_raw(self),
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaosSchedule<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosScheduleDescriptionResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetChaosSchedule)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginSetChaosSchedule<P0>(
        &self,
        setchaosscheduledescription: *const super::super::FABRIC_CHAOS_SERVICE_SCHEDULE_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginSetChaosSchedule)(
            ::windows_core::Interface::as_raw(self),
            setchaosscheduledescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndSetChaosSchedule<P0>(&self, context: P0) -> ::windows_core::Result<()>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        (::windows_core::Interface::vtable(self).EndSetChaosSchedule)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
        )
        .ok()
    }
    #[cfg(feature = "Win32_Foundation")]
    pub unsafe fn BeginGetChaosEvents<P0>(
        &self,
        chaoseventsdescription: *const super::super::FABRIC_CHAOS_EVENTS_SEGMENT_DESCRIPTION,
        timeoutmilliseconds: u32,
        callback: P0,
    ) -> ::windows_core::Result<super::IFabricAsyncOperationContext>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationCallback>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).BeginGetChaosEvents)(
            ::windows_core::Interface::as_raw(self),
            chaoseventsdescription,
            timeoutmilliseconds,
            callback.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
    pub unsafe fn EndGetChaosEvents<P0>(
        &self,
        context: P0,
    ) -> ::windows_core::Result<IFabricChaosEventsSegmentResult>
    where
        P0: ::windows_core::IntoParam<super::IFabricAsyncOperationContext>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).EndGetChaosEvents)(
            ::windows_core::Interface::as_raw(self),
            context.into_param().abi(),
            &mut result__,
        )
        .and_then(|| ::windows_core::Type::from_abi(result__))
    }
}
unsafe impl ::core::marker::Send for IFabricTestManagementClient4 {}
unsafe impl ::core::marker::Sync for IFabricTestManagementClient4 {}
#[repr(C)]
pub struct IFabricTestManagementClient4_Vtbl {
    pub base__: IFabricTestManagementClient3_Vtbl,
    pub BeginGetChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetChaos: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub BeginGetChaosSchedule: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    pub EndGetChaosSchedule: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginSetChaosSchedule: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CHAOS_SERVICE_SCHEDULE_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginSetChaosSchedule: usize,
    pub EndSetChaosSchedule: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(feature = "Win32_Foundation")]
    pub BeginGetChaosEvents: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *const super::super::FABRIC_CHAOS_EVENTS_SEGMENT_DESCRIPTION,
        u32,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
    #[cfg(not(feature = "Win32_Foundation"))]
    BeginGetChaosEvents: usize,
    pub EndGetChaosEvents: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut *mut ::core::ffi::c_void,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricUpgradeOrchestrationServiceStateResult,
    IFabricUpgradeOrchestrationServiceStateResult_Vtbl,
    0x413968aa_2eb7_4023_b9dc_0f2160b76a6d
);
::windows_core::imp::interface_hierarchy!(
    IFabricUpgradeOrchestrationServiceStateResult,
    ::windows_core::IUnknown
);
impl IFabricUpgradeOrchestrationServiceStateResult {
    pub unsafe fn get_State(
        &self,
    ) -> *mut super::super::FABRIC_UPGRADE_ORCHESTRATION_SERVICE_STATE {
        (::windows_core::Interface::vtable(self).get_State)(::windows_core::Interface::as_raw(self))
    }
}
unsafe impl ::core::marker::Send for IFabricUpgradeOrchestrationServiceStateResult {}
unsafe impl ::core::marker::Sync for IFabricUpgradeOrchestrationServiceStateResult {}
#[repr(C)]
pub struct IFabricUpgradeOrchestrationServiceStateResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_State:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        )
            -> *mut super::super::FABRIC_UPGRADE_ORCHESTRATION_SERVICE_STATE,
}
::windows_core::imp::com_interface!(
    IFabricUpgradeProgressResult,
    IFabricUpgradeProgressResult_Vtbl,
    0x2adb07db_f7db_4621_9afc_daabe1e53bf8
);
::windows_core::imp::interface_hierarchy!(IFabricUpgradeProgressResult, ::windows_core::IUnknown);
impl IFabricUpgradeProgressResult {
    pub unsafe fn get_TargetCodeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_TargetCodeVersion)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_TargetConfigVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_TargetConfigVersion)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self).get_UpgradeState)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self).GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
}
unsafe impl ::core::marker::Send for IFabricUpgradeProgressResult {}
unsafe impl ::core::marker::Sync for IFabricUpgradeProgressResult {}
#[repr(C)]
pub struct IFabricUpgradeProgressResult_Vtbl {
    pub base__: ::windows_core::IUnknown_Vtbl,
    pub get_TargetCodeVersion:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
    pub get_TargetConfigVersion:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
    pub get_UpgradeState:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> super::super::FABRIC_UPGRADE_STATE,
    pub GetUpgradeDomains: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION,
    ) -> ::windows_core::HRESULT,
    pub GetChangedUpgradeDomains: unsafe extern "system" fn(
        *mut ::core::ffi::c_void,
        *mut ::core::ffi::c_void,
        *mut u32,
        *mut *mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION,
    ) -> ::windows_core::HRESULT,
}
::windows_core::imp::com_interface!(
    IFabricUpgradeProgressResult2,
    IFabricUpgradeProgressResult2_Vtbl,
    0x9cc0aaf3_0f6c_40a3_85ac_38338dd36d75
);
::windows_core::imp::interface_hierarchy!(
    IFabricUpgradeProgressResult2,
    ::windows_core::IUnknown,
    IFabricUpgradeProgressResult
);
impl IFabricUpgradeProgressResult2 {
    pub unsafe fn get_TargetCodeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_TargetCodeVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_TargetConfigVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_TargetConfigVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_UpgradeState)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn get_RollingUpgradeMode(&self) -> super::super::FABRIC_ROLLING_UPGRADE_MODE {
        (::windows_core::Interface::vtable(self).get_RollingUpgradeMode)(
            ::windows_core::Interface::as_raw(self),
        )
    }
    pub unsafe fn get_NextUpgradeDomain(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self).get_NextUpgradeDomain)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricUpgradeProgressResult2 {}
unsafe impl ::core::marker::Sync for IFabricUpgradeProgressResult2 {}
#[repr(C)]
pub struct IFabricUpgradeProgressResult2_Vtbl {
    pub base__: IFabricUpgradeProgressResult_Vtbl,
    pub get_RollingUpgradeMode:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> super::super::FABRIC_ROLLING_UPGRADE_MODE,
    pub get_NextUpgradeDomain:
        unsafe extern "system" fn(*mut ::core::ffi::c_void) -> ::windows_core::PCWSTR,
}
::windows_core::imp::com_interface!(
    IFabricUpgradeProgressResult3,
    IFabricUpgradeProgressResult3_Vtbl,
    0xdc3346ef_d2ef_40c1_807b_1ca8d2388b47
);
::windows_core::imp::interface_hierarchy!(
    IFabricUpgradeProgressResult3,
    ::windows_core::IUnknown,
    IFabricUpgradeProgressResult,
    IFabricUpgradeProgressResult2
);
impl IFabricUpgradeProgressResult3 {
    pub unsafe fn get_TargetCodeVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_TargetCodeVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_TargetConfigVersion(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_TargetConfigVersion)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeState(&self) -> super::super::FABRIC_UPGRADE_STATE {
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .get_UpgradeState)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn GetUpgradeDomains(
        &self,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION> {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .GetUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn GetChangedUpgradeDomains<P0>(
        &self,
        previousprogress: P0,
        itemcount: *mut u32,
    ) -> ::windows_core::Result<*mut super::super::FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION>
    where
        P0: ::windows_core::IntoParam<IFabricUpgradeProgressResult>,
    {
        let mut result__ = ::std::mem::zeroed();
        (::windows_core::Interface::vtable(self)
            .base__
            .base__
            .GetChangedUpgradeDomains)(
            ::windows_core::Interface::as_raw(self),
            previousprogress.into_param().abi(),
            itemcount,
            &mut result__,
        )
        .map(|| result__)
    }
    pub unsafe fn get_RollingUpgradeMode(&self) -> super::super::FABRIC_ROLLING_UPGRADE_MODE {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_RollingUpgradeMode)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_NextUpgradeDomain(&self) -> ::windows_core::PCWSTR {
        (::windows_core::Interface::vtable(self)
            .base__
            .get_NextUpgradeDomain)(::windows_core::Interface::as_raw(self))
    }
    pub unsafe fn get_UpgradeProgress(&self) -> *mut super::super::FABRIC_UPGRADE_PROGRESS {
        (::windows_core::Interface::vtable(self).get_UpgradeProgress)(
            ::windows_core::Interface::as_raw(self),
        )
    }
}
unsafe impl ::core::marker::Send for IFabricUpgradeProgressResult3 {}
unsafe impl ::core::marker::Sync for IFabricUpgradeProgressResult3 {}
#[repr(C)]
pub struct IFabricUpgradeProgressResult3_Vtbl {
    pub base__: IFabricUpgradeProgressResult2_Vtbl,
    pub get_UpgradeProgress:
        unsafe extern "system" fn(
            *mut ::core::ffi::c_void,
        ) -> *mut super::super::FABRIC_UPGRADE_PROGRESS,
}
pub const FabricClient: ::windows_core::GUID =
    ::windows_core::GUID::from_u128(0x75f087fa_37f1_4984_b513_724da5b02197);
#[cfg(feature = "implement")]
::core::include!("impl.rs");
